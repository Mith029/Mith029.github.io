<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='airline-safety (airline-safety)' inline='true' name='federated.144px4i19s6scu1ciq03j1d2uypa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airline-safety' name='excel-direct.1ehcjnf0ep525k1dw3eff1t7leul'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/airline-safety.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ehcjnf0ep525k1dw3eff1t7leul' name='airline-safety' table='[&apos;airline-safety$&apos;]' type='table'>
          <columns gridOrigin='A1:H57:no:A1:H57:0' header='yes' outcome='6'>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
            <column datatype='integer' name='incidents_85_99' ordinal='2' />
            <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
            <column datatype='integer' name='fatalities_85_99' ordinal='4' />
            <column datatype='integer' name='incidents_00_14' ordinal='5' />
            <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
            <column datatype='integer' name='fatalities_00_14' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ehcjnf0ep525k1dw3eff1t7leul' name='airline-safety' table='[&apos;airline-safety$&apos;]' type='table'>
          <columns gridOrigin='A1:H57:no:A1:H57:0' header='yes' outcome='6'>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
            <column datatype='integer' name='incidents_85_99' ordinal='2' />
            <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
            <column datatype='integer' name='fatalities_85_99' ordinal='4' />
            <column datatype='integer' name='incidents_00_14' ordinal='5' />
            <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
            <column datatype='integer' name='fatalities_00_14' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H57:no:A1:H57:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avail_seat_km_per_week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[avail_seat_km_per_week]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>avail_seat_km_per_week</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_85_99]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>incidents_85_99</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_85_99]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>fatal_accidents_85_99</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_85_99]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>fatalities_85_99</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_00_14]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>incidents_00_14</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_00_14]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>fatal_accidents_00_14</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_00_14]</local-name>
            <parent-name>[airline-safety]</parent-name>
            <remote-alias>fatalities_00_14</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='airline-safety' datatype='table' name='[__tableau_internal_object_id__].[airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Avail Seat Km Per Week' datatype='integer' name='[avail_seat_km_per_week]' role='measure' type='quantitative' />
      <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
      <column caption='Fatal Accidents 85 99' datatype='integer' name='[fatal_accidents_85_99]' role='measure' type='quantitative' />
      <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
      <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
      <column caption='Incidents 00 14' datatype='integer' name='[incidents_00_14]' role='measure' type='quantitative' />
      <column caption='Incidents 85 99' datatype='integer' name='[incidents_85_99]' role='measure' type='quantitative' />
      <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
      <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatal_accidents_00_14:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_85_99:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:airline:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Cathay Pacific*&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Thai Airways&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TAP - Air Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egyptair&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garuda Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lankan / AirLanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austrian Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alitalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya Airways&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Air France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gulf Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SWISS*&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Aer Lingus&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Korean Air&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Vietnam Airlines&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;All Nippon Airways&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Malaysia Airlines&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Turkish Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Royal Air Maroc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aeroflot*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Al&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippine Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Air India*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawaiian Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TACA&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Alaska Airlines*&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;LAN Airlines&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Xiamen Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lufthansa*&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Delta / Northwest*&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Airways*&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin Atlantic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Condor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SAS*&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Avianca&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Qantas*&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Air New Zealand*&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TAM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aerolineas Argentinas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopian Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Japan Airlines&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;United / Continental*&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;KLM*&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;US Airways / America West*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aeromexico*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finnair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Southwest Airlines&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airline-safety' id='airline-safety_6029E8A9DF8F4A32BA62CE1E5F91D837'>
            <properties context=''>
              <relation connection='excel-direct.1ehcjnf0ep525k1dw3eff1t7leul' name='airline-safety' table='[&apos;airline-safety$&apos;]' type='table'>
                <columns gridOrigin='A1:H57:no:A1:H57:0' header='yes' outcome='6'>
                  <column datatype='string' name='airline' ordinal='0' />
                  <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
                  <column datatype='integer' name='incidents_85_99' ordinal='2' />
                  <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
                  <column datatype='integer' name='fatalities_85_99' ordinal='4' />
                  <column datatype='integer' name='incidents_00_14' ordinal='5' />
                  <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
                  <column datatype='integer' name='fatalities_00_14' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Motor-Vehicle Deaths and Rates' inline='true' name='federated.0rbri3d02ecvpz0zvo5hd09ps2yk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Motor-Vehicle Deaths and Rates' name='excel-direct.1mln89819ncn9a184qou1158z4d7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Motor-Vehicle Deaths and Rates.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Airplane_death' name='excel-direct.15luuey0llsxt61dopcqd1ykgajs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Airplane_death.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mln89819ncn9a184qou1158z4d7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:H109:no:A1:H109:0' header='yes' outcome='2'>
            <column datatype='integer' name='Years' ordinal='0' />
            <column datatype='integer' name='Number of deaths' ordinal='1' />
            <column datatype='integer' name='Vehicles (millions)' ordinal='2' />
            <column datatype='integer' name='Vehicle miles (billions)' ordinal='3' />
            <column datatype='integer' name='Drivers (millions)' ordinal='4' />
            <column datatype='real' name='Per 10,000 motor vehicles' ordinal='5' />
            <column datatype='real' name='Per 100,000,000 vehicle miles' ordinal='6' />
            <column datatype='real' name='Per 100,000 population' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1mln89819ncn9a184qou1158z4d7' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:H109:no:A1:H109:0' header='yes' outcome='2'>
              <column datatype='integer' name='Years' ordinal='0' />
              <column datatype='integer' name='Number of deaths' ordinal='1' />
              <column datatype='integer' name='Vehicles (millions)' ordinal='2' />
              <column datatype='integer' name='Vehicle miles (billions)' ordinal='3' />
              <column datatype='integer' name='Drivers (millions)' ordinal='4' />
              <column datatype='real' name='Per 10,000 motor vehicles' ordinal='5' />
              <column datatype='real' name='Per 100,000,000 vehicle miles' ordinal='6' />
              <column datatype='real' name='Per 100,000 population' ordinal='7' />
            </columns>
          </relation>
          <relation connection='excel-direct.15luuey0llsxt61dopcqd1ykgajs' name='Sheet11' table='[Sheet1$]' type='table'>
            <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
              <column datatype='integer' name='Years' ordinal='0' />
              <column datatype='integer' name='Number of deaths' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Drivers (millions)]' value='[Sheet1].[Drivers (millions)]' />
          <map key='[Number of deaths (Sheet11)]' value='[Sheet11].[Number of deaths]' />
          <map key='[Number of deaths]' value='[Sheet1].[Number of deaths]' />
          <map key='[Per 10,000 motor vehicles]' value='[Sheet1].[Per 10,000 motor vehicles]' />
          <map key='[Per 100,000 population]' value='[Sheet1].[Per 100,000 population]' />
          <map key='[Per 100,000,000 vehicle miles]' value='[Sheet1].[Per 100,000,000 vehicle miles]' />
          <map key='[Vehicle miles (billions)]' value='[Sheet1].[Vehicle miles (billions)]' />
          <map key='[Vehicles (millions)]' value='[Sheet1].[Vehicles (millions)]' />
          <map key='[Years (Sheet11)]' value='[Sheet11].[Years]' />
          <map key='[Years]' value='[Sheet1].[Years]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H109:no:A1:H109:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;C1:D101:no:C1:D101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicles (millions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicles (millions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vehicles (millions)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle miles (billions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicle miles (billions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vehicle miles (billions)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drivers (millions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Drivers (millions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Drivers (millions)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per 10,000 motor vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per 10,000 motor vehicles]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Per 10,000 motor vehicles</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per 100,000,000 vehicle miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per 100,000,000 vehicle miles]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Per 100,000,000 vehicle miles</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per 100,000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per 100,000 population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Per 100,000 population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Years (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E6B27FDF93034249B7B0404E19C968B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of deaths (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Number of deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E6B27FDF93034249B7B0404E19C968B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Motor' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_269D1954CE3346ADB3B876A327AC0E6F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Airplane' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E6B27FDF93034249B7B0404E19C968B7]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Motor' id='Sheet1_269D1954CE3346ADB3B876A327AC0E6F'>
            <properties context=''>
              <relation connection='excel-direct.1mln89819ncn9a184qou1158z4d7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:H109:no:A1:H109:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Years' ordinal='0' />
                  <column datatype='integer' name='Number of deaths' ordinal='1' />
                  <column datatype='integer' name='Vehicles (millions)' ordinal='2' />
                  <column datatype='integer' name='Vehicle miles (billions)' ordinal='3' />
                  <column datatype='integer' name='Drivers (millions)' ordinal='4' />
                  <column datatype='real' name='Per 10,000 motor vehicles' ordinal='5' />
                  <column datatype='real' name='Per 100,000,000 vehicle miles' ordinal='6' />
                  <column datatype='real' name='Per 100,000 population' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Airplane' id='Sheet1_E6B27FDF93034249B7B0404E19C968B7'>
            <properties context=''>
              <relation connection='excel-direct.15luuey0llsxt61dopcqd1ykgajs' name='Sheet11' table='[Sheet1$]' type='table'>
                <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Years' ordinal='0' />
                  <column datatype='integer' name='Number of deaths' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Years]' />
              <expression op='[Years (Sheet11)]' />
            </expression>
            <first-end-point object-id='Sheet1_269D1954CE3346ADB3B876A327AC0E6F' />
            <second-end-point object-id='Sheet1_E6B27FDF93034249B7B0404E19C968B7' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Survey)' inline='true' name='federated.06afjvl1clej1p1e5569004skym6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Survey' name='excel-direct.09bpg2k0jhadmu12vqrjd0duk0ew'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Survey.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.09bpg2k0jhadmu12vqrjd0duk0ew' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C27:no:A1:C27:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Ever' ordinal='1' />
            <column datatype='integer' name='Past Year' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.09bpg2k0jhadmu12vqrjd0duk0ew' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C27:no:A1:C27:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Ever' ordinal='1' />
            <column datatype='integer' name='Past Year' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C27:no:A1:C27:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D00A67B9C38F4F149B6ECEAD9849A296]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ever</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ever]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ever</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D00A67B9C38F4F149B6ECEAD9849A296]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Past Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Past Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Past Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D00A67B9C38F4F149B6ECEAD9849A296]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Past Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D00A67B9C38F4F149B6ECEAD9849A296]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D00A67B9C38F4F149B6ECEAD9849A296'>
            <properties context=''>
              <relation connection='excel-direct.09bpg2k0jhadmu12vqrjd0duk0ew' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C27:no:A1:C27:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Ever' ordinal='1' />
                  <column datatype='integer' name='Past Year' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Survey' inline='true' name='federated.07sabq714udsif1fu1olq1tqvgf3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Motor-Vehicle Deaths and Rates' name='excel-direct.16mdub81sregg51ep7kz11wxjbo4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Motor-Vehicle Deaths and Rates.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Airplane_death' name='excel-direct.0dpzm8j0y3ri8m10kw96x1vppltn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Airplane_death.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[Years]' />
              <expression op='[Sheet11].[Years]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0dpzm8j0y3ri8m10kw96x1vppltn' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
              <column datatype='string' name='Years' ordinal='0' />
              <column datatype='integer' name='Number of deaths' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.16mdub81sregg51ep7kz11wxjbo4' name='Sheet11' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:H109:no:A1:H109:0' header='yes' outcome='2'>
              <column datatype='string' name='Years' ordinal='0' />
              <column datatype='integer' name='Number of deaths' ordinal='1' />
              <column datatype='integer' name='Vehicles (millions)' ordinal='2' />
              <column datatype='integer' name='Vehicle miles (billions)' ordinal='3' />
              <column datatype='integer' name='Drivers (millions)' ordinal='4' />
              <column datatype='real' name='Per 10,000 motor vehicles' ordinal='5' />
              <column datatype='real' name='Per 100,000,000 vehicle miles' ordinal='6' />
              <column datatype='real' name='Per 100,000 population' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[Years]' />
              <expression op='[Sheet11].[Years]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0dpzm8j0y3ri8m10kw96x1vppltn' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
              <column datatype='string' name='Years' ordinal='0' />
              <column datatype='integer' name='Number of deaths' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.16mdub81sregg51ep7kz11wxjbo4' name='Sheet11' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:H109:no:A1:H109:0' header='yes' outcome='2'>
              <column datatype='string' name='Years' ordinal='0' />
              <column datatype='integer' name='Number of deaths' ordinal='1' />
              <column datatype='integer' name='Vehicles (millions)' ordinal='2' />
              <column datatype='integer' name='Vehicle miles (billions)' ordinal='3' />
              <column datatype='integer' name='Drivers (millions)' ordinal='4' />
              <column datatype='real' name='Per 10,000 motor vehicles' ordinal='5' />
              <column datatype='real' name='Per 100,000,000 vehicle miles' ordinal='6' />
              <column datatype='real' name='Per 100,000 population' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Drivers (millions)]' value='[Sheet11].[Drivers (millions)]' />
          <map key='[Number of deaths (Sheet11)]' value='[Sheet11].[Number of deaths]' />
          <map key='[Number of deaths]' value='[Sheet1].[Number of deaths]' />
          <map key='[Per 10,000 motor vehicles]' value='[Sheet11].[Per 10,000 motor vehicles]' />
          <map key='[Per 100,000 population]' value='[Sheet11].[Per 100,000 population]' />
          <map key='[Per 100,000,000 vehicle miles]' value='[Sheet11].[Per 100,000,000 vehicle miles]' />
          <map key='[Vehicle miles (billions)]' value='[Sheet11].[Vehicle miles (billions)]' />
          <map key='[Vehicles (millions)]' value='[Sheet11].[Vehicles (millions)]' />
          <map key='[Years (Sheet11)]' value='[Sheet11].[Years]' />
          <map key='[Years]' value='[Sheet1].[Years]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;C1:D101:no:C1:D101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H109:no:A1:H109:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Years (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of deaths (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Number of deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicles (millions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicles (millions)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Vehicles (millions)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle miles (billions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicle miles (billions)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Vehicle miles (billions)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drivers (millions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Drivers (millions)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Drivers (millions)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per 10,000 motor vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per 10,000 motor vehicles]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Per 10,000 motor vehicles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per 100,000,000 vehicle miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per 100,000,000 vehicle miles]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Per 100,000,000 vehicle miles</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per 100,000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per 100,000 population]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Per 100,000 population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FF17647B9748C993463B5D4EA5EF02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Drivers (millions)]' role='measure' type='quantitative' />
      <column caption='Motor vehicle deaths ' datatype='integer' name='[Number of deaths (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Airplane deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[Per 10,000 motor vehicles]' role='measure' type='quantitative' />
      <column datatype='real' name='[Per 100,000 population]' role='measure' type='quantitative' />
      <column datatype='real' name='[Per 100,000,000 vehicle miles]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Vehicle miles (billions)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Vehicles (millions)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_89FF17647B9748C993463B5D4EA5EF02]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_89FF17647B9748C993463B5D4EA5EF02]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_89FF17647B9748C993463B5D4EA5EF02:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Drivers (millions)]' derivation='Sum' name='[sum:Drivers (millions):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of deaths (Sheet11)]' derivation='Sum' name='[sum:Number of deaths (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per 10,000 motor vehicles]' derivation='Sum' name='[sum:Per 10,000 motor vehicles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per 100,000 population]' derivation='Sum' name='[sum:Per 100,000 population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per 100,000,000 vehicle miles]' derivation='Sum' name='[sum:Per 100,000,000 vehicle miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vehicle miles (billions)]' derivation='Sum' name='[sum:Vehicle miles (billions):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vehicles (millions)]' derivation='Sum' name='[sum:Vehicles (millions):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[__tableau_internal_object_id__].[cnt:Sheet1_89FF17647B9748C993463B5D4EA5EF02:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Per 100,000 population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Per 10,000 motor vehicles:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Vehicle miles (billions):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Per 100,000,000 vehicle miles:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Drivers (millions):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Vehicles (millions):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_89FF17647B9748C993463B5D4EA5EF02'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Sheet1].[Years]' />
                    <expression op='[Sheet11].[Years]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0dpzm8j0y3ri8m10kw96x1vppltn' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
                    <column datatype='string' name='Years' ordinal='0' />
                    <column datatype='integer' name='Number of deaths' ordinal='1' />
                  </columns>
                </relation>
                <relation connection='excel-direct.16mdub81sregg51ep7kz11wxjbo4' name='Sheet11' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:H109:no:A1:H109:0' header='yes' outcome='2'>
                    <column datatype='string' name='Years' ordinal='0' />
                    <column datatype='integer' name='Number of deaths' ordinal='1' />
                    <column datatype='integer' name='Vehicles (millions)' ordinal='2' />
                    <column datatype='integer' name='Vehicle miles (billions)' ordinal='3' />
                    <column datatype='integer' name='Drivers (millions)' ordinal='4' />
                    <column datatype='real' name='Per 10,000 motor vehicles' ordinal='5' />
                    <column datatype='real' name='Per 100,000,000 vehicle miles' ordinal='6' />
                    <column datatype='real' name='Per 100,000 population' ordinal='7' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Average Domestic Airfare Time Series)' inline='true' name='federated.0ql6q7k1h5sbsw1ajqyln0ya29tx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Average Domestic Airfare Time Series' name='excel-direct.0r43olh1nc9pdw16fh8tu10m9u5v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Average Domestic Airfare Time Series.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0r43olh1nc9pdw16fh8tu10m9u5v' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E33:no:A1:E33:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='Base Fare' ordinal='1' />
            <column datatype='real' name='Base Fare (2021)' ordinal='2' />
            <column datatype='real' name='&quot;All-in&quot; Fare' ordinal='3' />
            <column datatype='real' name='&quot;All-in&quot; Fare (2021)' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0r43olh1nc9pdw16fh8tu10m9u5v' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E33:no:A1:E33:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='Base Fare' ordinal='1' />
            <column datatype='real' name='Base Fare (2021)' ordinal='2' />
            <column datatype='real' name='&quot;All-in&quot; Fare' ordinal='3' />
            <column datatype='real' name='&quot;All-in&quot; Fare (2021)' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E33:no:A1:E33:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EEABAB06257469D86052D1270A78897]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base Fare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Base Fare]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Base Fare</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EEABAB06257469D86052D1270A78897]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base Fare (2021)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Base Fare (2021)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Base Fare (2021)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EEABAB06257469D86052D1270A78897]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;All-in&quot; Fare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[&quot;All-in&quot; Fare]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>&quot;All-in&quot; Fare</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EEABAB06257469D86052D1270A78897]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;All-in&quot; Fare (2021)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[&quot;All-in&quot; Fare (2021)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>&quot;All-in&quot; Fare (2021)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5EEABAB06257469D86052D1270A78897]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[&quot;All-in&quot; Fare (2021)]' role='measure' type='quantitative' />
      <column datatype='real' name='[&quot;All-in&quot; Fare]' role='measure' type='quantitative' />
      <column datatype='real' name='[Base Fare]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5EEABAB06257469D86052D1270A78897]' role='measure' type='quantitative' />
      <column-instance column='[&quot;All-in&quot; Fare (2021)]' derivation='Sum' name='[sum:&quot;All-in&quot; Fare (2021):qk]' pivot='key' type='quantitative' />
      <column-instance column='[&quot;All-in&quot; Fare]' derivation='Sum' name='[sum:&quot;All-in&quot; Fare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Base Fare]' derivation='Sum' name='[sum:Base Fare:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:\&quot;All-in\&quot; Fare:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:\&quot;All-in\&quot; Fare (2021):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:Base Fare:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5EEABAB06257469D86052D1270A78897'>
            <properties context=''>
              <relation connection='excel-direct.0r43olh1nc9pdw16fh8tu10m9u5v' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E33:no:A1:E33:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='real' name='Base Fare' ordinal='1' />
                  <column datatype='real' name='Base Fare (2021)' ordinal='2' />
                  <column datatype='real' name='&quot;All-in&quot; Fare' ordinal='3' />
                  <column datatype='real' name='&quot;All-in&quot; Fare (2021)' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Airplane_death' inline='true' name='federated.14g2nv919hdqyg1cu4bvi0rxhuv5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airplane_death' name='excel-direct.1a9lcc313lfl1n15tijog110yfsb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mithilpatel/Desktop/DSC 640/Week3&amp;4/Airplane_death.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1a9lcc313lfl1n15tijog110yfsb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
            <column datatype='integer' name='Years' ordinal='0' />
            <column datatype='integer' name='Number of deaths' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1a9lcc313lfl1n15tijog110yfsb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
            <column datatype='integer' name='Years' ordinal='0' />
            <column datatype='integer' name='Number of deaths' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;C1:D101:no:C1:D101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DC2FD37B8ABE4E81A74B14FA6FFF9ED1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DC2FD37B8ABE4E81A74B14FA6FFF9ED1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_DC2FD37B8ABE4E81A74B14FA6FFF9ED1]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_DC2FD37B8ABE4E81A74B14FA6FFF9ED1'>
            <properties context=''>
              <relation connection='excel-direct.1a9lcc313lfl1n15tijog110yfsb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='C1:D101:no:C1:D101:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Years' ordinal='0' />
                  <column datatype='integer' name='Number of deaths' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Air travel frequency line chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Line chart of how often people have traveled via air>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Survey)' name='federated.06afjvl1clej1p1e5569004skym6' />
          </datasources>
          <datasource-dependencies datasource='federated.06afjvl1clej1p1e5569004skym6'>
            <column datatype='integer' name='[Ever]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ever]' derivation='Sum' name='[sum:Ever:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06afjvl1clej1p1e5569004skym6].[sum:Ever:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06afjvl1clej1p1e5569004skym6].[sum:Ever:qk]</rows>
        <cols>[federated.06afjvl1clej1p1e5569004skym6].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{E6F215FB-4468-4988-A898-EB5235A28DA8}' />
    </worksheet>
    <worksheet name='Airfare line chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Line chart&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Average Domestic Airfare Time Series)' name='federated.0ql6q7k1h5sbsw1ajqyln0ya29tx' />
          </datasources>
          <datasource-dependencies datasource='federated.0ql6q7k1h5sbsw1ajqyln0ya29tx'>
            <column datatype='real' name='[&quot;All-in&quot; Fare (2021)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Base Fare]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[&quot;All-in&quot; Fare (2021)]' derivation='Sum' name='[sum:&quot;All-in&quot; Fare (2021):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base Fare]' derivation='Sum' name='[sum:Base Fare:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:Base Fare:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:&quot;All-in&quot; Fare (2021):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:Base Fare:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:&quot;All-in&quot; Fare (2021):qk] + [federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[sum:Base Fare:qk])</rows>
        <cols>[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{FDF532C8-C049-495D-A6D1-14B713560D67}' />
    </worksheet>
    <worksheet name='Bubble chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Bubble chart of fatalities in recent years in each Airlines>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety (airline-safety)' name='federated.144px4i19s6scu1ciq03j1d2uypa' />
          </datasources>
          <datasource-dependencies datasource='federated.144px4i19s6scu1ciq03j1d2uypa'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' />
              <size column='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' />
              <text column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D512BACC-9F98-4D4D-893A-D1B4259E8DA6}' />
    </worksheet>
    <worksheet name='Car fatality line chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Line chart of motor vehicle fatalities>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Survey' name='federated.07sabq714udsif1fu1olq1tqvgf3' />
          </datasources>
          <datasource-dependencies datasource='federated.07sabq714udsif1fu1olq1tqvgf3'>
            <column caption='Motor vehicle deaths ' datatype='integer' name='[Number of deaths (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Airplane deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years]' role='dimension' type='nominal' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of deaths (Sheet11)]' derivation='Sum' name='[sum:Number of deaths (Sheet11):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths (Sheet11):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07sabq714udsif1fu1olq1tqvgf3].[Multiple Values]</rows>
        <cols>([federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk] / [federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{B4DAD8D6-E111-4223-89C8-1A5668DF9DE7}' />
    </worksheet>
    <worksheet name='Car vs Airplane stacked'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stacked bar chart of airplane and motor vehicle fatality</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Survey' name='federated.07sabq714udsif1fu1olq1tqvgf3' />
          </datasources>
          <datasource-dependencies datasource='federated.07sabq714udsif1fu1olq1tqvgf3'>
            <column caption='Motor vehicle deaths ' datatype='integer' name='[Number of deaths (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Airplane deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years]' role='dimension' type='nominal' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of deaths (Sheet11)]' derivation='Sum' name='[sum:Number of deaths (Sheet11):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths (Sheet11):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths (Sheet11):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Years:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Years:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Years:nk]' member='&quot;2021&quot;' />
                <groupfilter function='member' level='[none:Years:nk]' member='&quot;2022&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</column>
            <column>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' />
              <text column='[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths (Sheet11):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07sabq714udsif1fu1olq1tqvgf3].[Multiple Values]</rows>
        <cols>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]</cols>
      </table>
      <simple-id uuid='{07859C6B-C057-4363-AA81-53BF07A0C5F5}' />
    </worksheet>
    <worksheet name='Fatalities by Airlines'>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety (airline-safety)' name='federated.144px4i19s6scu1ciq03j1d2uypa' />
          </datasources>
          <datasource-dependencies datasource='federated.144px4i19s6scu1ciq03j1d2uypa'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_85_99:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;American*&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;British Airways*&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;China Airlines&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;Delta / Northwest*&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;Hawaiian Airlines&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;Japan Airlines&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;Southwest Airlines&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;United / Continental*&quot;' />
              <groupfilter function='member' level='[none:airline:nk]' member='&quot;US Airways / America West*&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</column>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk] / [federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names])</rows>
        <cols>[federated.144px4i19s6scu1ciq03j1d2uypa].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{FD911184-1563-4712-AA99-FFCBB48B323B}' />
    </worksheet>
    <worksheet name='Fatality stacked bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Stacked bar chart of fatalities in developed countries over the years>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety (airline-safety)' name='federated.144px4i19s6scu1ciq03j1d2uypa' />
          </datasources>
          <datasource-dependencies datasource='federated.144px4i19s6scu1ciq03j1d2uypa'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_85_99:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</column>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' />
              <text column='[federated.144px4i19s6scu1ciq03j1d2uypa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.144px4i19s6scu1ciq03j1d2uypa].[Multiple Values]</rows>
        <cols>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</cols>
      </table>
      <simple-id uuid='{C5AA5F95-223D-4E80-AC97-66F9F9A14FBE}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Airplane Fatality in Last Few Decades</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airplane_death' name='federated.14g2nv919hdqyg1cu4bvi0rxhuv5' />
          </datasources>
          <datasource-dependencies datasource='federated.14g2nv919hdqyg1cu4bvi0rxhuv5'>
            <column datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Years]' role='measure' type='quantitative' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14g2nv919hdqyg1cu4bvi0rxhuv5].[none:Years:qk]' included-values='in-range'>
            <min>1972</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.14g2nv919hdqyg1cu4bvi0rxhuv5].[none:Years:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14g2nv919hdqyg1cu4bvi0rxhuv5].[sum:Number of deaths:qk]</rows>
        <cols>[federated.14g2nv919hdqyg1cu4bvi0rxhuv5].[none:Years:qk]</cols>
      </table>
      <simple-id uuid='{B7CBE5D1-37B4-44EE-BA5E-8F32F070A505}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='18'>Fatalities By Airlines (2000 - 2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety (airline-safety)' name='federated.144px4i19s6scu1ciq03j1d2uypa' />
          </datasources>
          <datasource-dependencies datasource='federated.144px4i19s6scu1ciq03j1d2uypa'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' num-steps='2' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.5487293004989624' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2193922996520996' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</rows>
        <cols>([federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk] + [federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk])</cols>
      </table>
      <simple-id uuid='{05E927CB-7C48-4BA8-85CF-7ADF744F1ABF}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Most Distance Traveled Per Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety (airline-safety)' name='federated.144px4i19s6scu1ciq03j1d2uypa' />
          </datasources>
          <datasource-dependencies datasource='federated.144px4i19s6scu1ciq03j1d2uypa'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Avail Seat Km Per Week' datatype='integer' name='[avail_seat_km_per_week]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[avail_seat_km_per_week]' derivation='Sum' name='[sum:avail_seat_km_per_week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:airline:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:airline:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Aer Lingus&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Alaska Airlines*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;All Nippon Airways&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Avianca&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Cathay Pacific*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Delta / Northwest*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Japan Airlines&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;KLM*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Korean Air&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;LAN Airlines&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Malaysia Airlines&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Qantas*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Thai Airways&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Turkish Airlines&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;United / Continental*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;US Airways / America West*&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Vietnam Airlines&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='&quot;Xiamen Airlines&quot;' />
                  <groupfilter function='member' level='[none:airline:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' />
              <wedge-size column='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:avail_seat_km_per_week:qk]' />
              <size column='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:avail_seat_km_per_week:qk]' />
              <text column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.637182354927063' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{331C355D-0736-4211-B2D8-C803EF0F5F03}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Airplane vs Motor Vehicle fatality in last  5 years>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Survey' name='federated.07sabq714udsif1fu1olq1tqvgf3' />
          </datasources>
          <datasource-dependencies datasource='federated.07sabq714udsif1fu1olq1tqvgf3'>
            <column caption='Motor vehicle deaths ' datatype='integer' name='[Number of deaths (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Airplane deaths' datatype='integer' name='[Number of deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years]' role='dimension' type='nominal' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of deaths (Sheet11)]' derivation='Sum' name='[sum:Number of deaths (Sheet11):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of deaths]' derivation='Sum' name='[sum:Number of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths (Sheet11):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sabq714udsif1fu1olq1tqvgf3].[sum:Number of deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2016&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2017&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2018&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2019&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2020&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</column>
            <column>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' />
              <text column='[federated.07sabq714udsif1fu1olq1tqvgf3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07sabq714udsif1fu1olq1tqvgf3].[Multiple Values]</rows>
        <cols>([federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk] / [federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2D0269F8-B8FA-4503-98F1-99A363671A06}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Delta Airlines fatalities&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airline-safety (airline-safety)' name='federated.144px4i19s6scu1ciq03j1d2uypa' />
          </datasources>
          <datasource-dependencies datasource='federated.144px4i19s6scu1ciq03j1d2uypa'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_85_99:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_85_99:qk]&quot;</bucket>
              <bucket>&quot;[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;Delta / Northwest*&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</column>
            <column>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.144px4i19s6scu1ciq03j1d2uypa].[Multiple Values]' scope='cols' value='Fatalities' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' />
              <text column='[federated.144px4i19s6scu1ciq03j1d2uypa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk] / [federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names])</rows>
        <cols>[federated.144px4i19s6scu1ciq03j1d2uypa].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{F24164A6-D3BE-4BE6-B1A8-BAB3B32F114B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Blog Post'>
      <style />
      <size maxheight='1400' maxwidth='1300' minheight='1400' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98858' id='24' param='vert' type-v2='layout-flow' w='98770' x='615' y='571'>
            <zone h='98858' id='7' param='horz' type-v2='layout-flow' w='98770' x='615' y='571'>
              <zone h='98858' id='5' type-v2='layout-basic' w='86462' x='615' y='571'>
                <zone h='34356' id='3' name='Fatalities by Airlines' w='86462' x='615' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='17304' id='9' name='Sheet 9' w='43231' x='615' y='34927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29895' id='10' name='Sheet 10' w='86462' x='615' y='69534'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='34607' id='11' name='Air travel frequency line chart' w='43231' x='43846' y='34927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='17303' id='12' name='Car fatality line chart' w='43231' x='615' y='52231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='98858' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12308' x='87077' y='571'>
                <zone h='4714' id='8' name='Fatalities by Airlines' pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' type-v2='color' w='12308' x='87077' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='33' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='34356' id='3' is-fixed='true' name='Fatalities by Airlines' w='86462' x='615' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4714' id='8' name='Fatalities by Airlines' pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' type-v2='color' w='12308' x='87077' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='17304' id='9' is-fixed='true' name='Sheet 9' w='43231' x='615' y='34927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34607' id='11' is-fixed='true' name='Air travel frequency line chart' w='43231' x='43846' y='34927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='17303' id='12' is-fixed='true' name='Car fatality line chart' w='43231' x='615' y='52231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29895' id='10' is-fixed='true' name='Sheet 10' w='86462' x='615' y='69534'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4B599F78-2B9A-40A3-962D-EA51A30900A4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1400' maxwidth='1300' minheight='1400' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98858' id='7' param='horz' type-v2='layout-flow' w='98770' x='615' y='571'>
            <zone h='98858' id='5' type-v2='layout-basic' w='98770' x='615' y='571'>
              <zone h='21215' id='3' name='Fatality stacked bar' w='89462' x='615' y='571'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22215' id='10' name='Fatalities by Airlines' w='53778' x='615' y='77214'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37428' id='11' name='Bubble chart' w='44992' x='54393' y='58143'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18714' id='13' name='Air travel frequency line chart' w='53778' x='615' y='55500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14071' id='15' name='Car vs Airplane stacked' w='89462' x='615' y='21786'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17214' id='17' name='Airfare line chart' w='53778' x='615' y='35857'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18714' id='19' name='Car fatality line chart' w='44992' x='54393' y='35857'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3572' id='20' name='Car fatality line chart' pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type-v2='color' w='44992' x='54393' y='54571'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3000' id='14' name='Air travel frequency line chart' pane-specification-id='2' param='[federated.06afjvl1clej1p1e5569004skym6].[sum:Ever:qk]' type-v2='color' w='53778' x='615' y='74214'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3858' id='12' name='Bubble chart' pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' type-v2='color' w='44992' x='54393' y='95571'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2429' id='18' leg-item-layout='horz' name='Airfare line chart' pane-specification-id='1' param='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]' type-v2='color' w='53778' x='615' y='53071'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22286' id='9' name='Fatality stacked bar' pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' type-v2='color' w='9308' x='90077' y='571'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13000' id='16' name='Car vs Airplane stacked' pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type-v2='color' w='9308' x='90077' y='22857'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='44' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='21215' id='3' is-fixed='true' name='Fatality stacked bar' w='89462' x='615' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22286' id='9' name='Fatality stacked bar' pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' type-v2='color' w='9308' x='90077' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='14071' id='15' is-fixed='true' name='Car vs Airplane stacked' w='89462' x='615' y='21786'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13000' id='16' name='Car vs Airplane stacked' pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type-v2='color' w='9308' x='90077' y='22857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='17214' id='17' is-fixed='true' name='Airfare line chart' w='53778' x='615' y='35857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2429' id='18' leg-item-layout='horz' name='Airfare line chart' pane-specification-id='1' param='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]' type-v2='color' w='53778' x='615' y='53071'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='18714' id='19' is-fixed='true' name='Car fatality line chart' w='44992' x='54393' y='35857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3572' id='20' name='Car fatality line chart' pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type-v2='color' w='44992' x='54393' y='54571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='18714' id='13' is-fixed='true' name='Air travel frequency line chart' w='53778' x='615' y='55500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='14' name='Air travel frequency line chart' pane-specification-id='2' param='[federated.06afjvl1clej1p1e5569004skym6].[sum:Ever:qk]' type-v2='color' w='53778' x='615' y='74214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37428' id='11' is-fixed='true' name='Bubble chart' w='44992' x='54393' y='58143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3858' id='12' name='Bubble chart' pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' type-v2='color' w='44992' x='54393' y='95571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='22215' id='10' is-fixed='true' name='Fatalities by Airlines' w='53778' x='615' y='77214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D6977729-C715-4C46-82DE-977ABF98554C}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Bubble chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:fatalities_00_14:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A61EC6A8-F0DD-489B-8417-B9E437DB3B34}' />
    </window>
    <window class='worksheet' name='Fatality stacked bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</field>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E76AA50F-2CC4-4445-8FDB-01E184B5A169}' />
    </window>
    <window class='worksheet' name='Fatalities by Airlines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</field>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2A85435-7BDE-4E15-A2DE-1B1D7BE16C9D}' />
    </window>
    <window class='worksheet' name='Air travel frequency line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06afjvl1clej1p1e5569004skym6].[none:Year:qk]</field>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93B4E01E-E388-4DA2-BDBA-A787E6C47654}' />
    </window>
    <window class='worksheet' name='Car fatality line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1DBC1801-3558-448C-8D91-3BD14434C7C1}' />
    </window>
    <window class='worksheet' name='Car vs Airplane stacked'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</field>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{08768D9F-85CD-42FE-90CB-CA723FEA530E}' />
    </window>
    <window class='worksheet' name='Airfare line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]</field>
            <field>[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B7E29A84-D4B4-4CD7-B9FB-30043616EA78}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Air travel frequency line chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Airfare line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ql6q7k1h5sbsw1ajqyln0ya29tx].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Bubble chart' />
        <viewpoint name='Car fatality line chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Car vs Airplane stacked'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Fatalities by Airlines'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Fatality stacked bar'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2B8B4403-B59A-4268-89B8-0D38D396FF77}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[:Measure Names]</field>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Number of deaths:nk]</field>
            <field>[federated.07sabq714udsif1fu1olq1tqvgf3].[none:Years:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E0FA6C2-6CD8-40B4-9BF3-CA0A89B43D51}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]' size='40' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</field>
            <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC3052C3-F675-466B-BFF7-E9E428312890}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E19439C9-810C-4562-B64E-24F3C2233250}' />
    </window>
    <window class='dashboard' name='Blog Post'>
      <viewpoints>
        <viewpoint name='Air travel frequency line chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Car fatality line chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Fatalities by Airlines'>
          <highlight>
            <color-one-way>
              <field>[federated.144px4i19s6scu1ciq03j1d2uypa].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C53877C9-94AC-4440-8F93-07D7BCDA924E}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{56926E92-F5A7-498A-94FA-29AD979E6888}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.144px4i19s6scu1ciq03j1d2uypa].[sum:avail_seat_km_per_week:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.144px4i19s6scu1ciq03j1d2uypa].[none:airline:nk]'>
          <bucket-selection />
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{41EC932B-E0F4-4E79-842F-D5FF9E36135A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Air travel frequency line chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airfare line chart' width='192'>
      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
      ZEZCSH5/wwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Blog Post' width='192'>
      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
      gkgkArDCGH748CHBYJCFhQWCweBONa8+qVQgGEI6PsBgeJ7yqWPMBYNMTEyQy+UYGRlZVc9g
      s4gRYJsZHx+ntbWVv/mbv6Gvr4/XXnuNjz/+mHfffZfx8XFmZ2c5fPgwH330EV6vl6WlJX71
      q1/tdLOfm0qlQqlUqk1sxdQcdHYw8egRuVyOhw8fMjY2xg9+8APGxsbo6OhgdHSUV199dcu3
      EgqwzbzxxhtoNBr6+/vp7+8nFovR39+Pw+FQ049brVa6u7t56aWXGB0d3eEWb45yucw//dM/
      cfbs2a2lrlcUGJuAd3+IN51mbGyMSqVCLBajubmZn//85yiKwokTJ2rSbrEKJHhu1nrmhUKB
      ixcvcvDgQfr7+58pY91VoFtDsJiAn7yz5nUrrt0AYhVI8EKohh9ueaOby7ls+P4H271tY9cr
      wNMCngXbw3rPfLO7iRVF4caNG5hMJhwOxwsNU931CiAC2l88az3zqakpzp49u6ntFVevXiWR
      SKiVKYUCCHYdi4uLhEIh/H7/c3+2p6eHZDLJgQMHNpXvaSvseiNYsDsR9QEEgjqgpgqw0cJl
      a5HP52vm3XuSSqWy7tx0vYrosixTKDy99NLT5Ap2B6sUoFQqMTExwaVLl9RjG3XOfPnll089
      f+/evTWP53I5/v7v/558/tl5/teT8TQmJyd59OgRsByf+vie+itXrqzZ0T/66KMVe9IjkQih
      UGjFNQ8fPmR6eprR0VH1/NLSErOzs2u2Y2FhgWQy+dzt3+0sLi4Sj8cZHh6uuy3YKyZHV69e
      JZlM8s477zAyMqIeD4VC3L17F6vVSktLC+FwmEKhwMmTJ+nq6uKTTz7BYrFQKBT47LPPgOXs
      ayMjIzQ2NhIOhzEYDMzNzRGLxTh37hzBYJArV64A0NXVhSzLVCoVBgcHCYVCzM/P09TUxJtv
      vsnVq1cBOH78OBcvXsRut/Ptt9+iKApnzpzh448/5tSpU5w5c4bPP/+cEydOMDU1xejoKJVK
      hZMnT3Lz5k1u3rzJmTNnaGho4PLly1gsFrXQ39/93d9RqVT48z//c6LRKNFoFEmS+Oyzz1hc
      XKS1tZVgMMgHH3zAjRs3WFxc5OTJk+rzmZubIxgM8u677xKJRBgaGqJQKPD666/z9ddfc/Dg
      Qd544w2uXLlCJpPhgw8+qLui0duBoijMz8+Ty+UYGBhgfn6e7u7uuimTuuIXsFgsaiLbx8nn
      8zidTn72s58Rj8d59OgRLpeLRCIBLK8L/+QnP8FoNHL+/Hm0Wq3a6asZAf74j/+Yl19+mXPn
      zgHLJWr+6I/+CJvNRm9vL8ePH8dut1MoFHjvvffo7u7mnXfeYWJigr6+Ps6dO4ckSQwMDNDd
      3Y3JZOJP/uRPuH//Pt3d3Zw5cwaAYrHI4OCgumOwWr3yrbfewuPxqPWMq22G5aiyx6/1+Xwc
      OXKEpqYmJEkikUjQ29vLqVOn1HDH6nevPp/qeZvNRqFQUJ9RKpWitbWVVCqFJEnkcjksFsuG
      fry9QKVSwe1243K5mJycxO12o9Pp0Gq1aqyuXq9f9ffT/tXy2hUK8Prrr/Pzn/8cvV6PxWLh
      4sWLLCws4HK5VuTvPHz4MMViUY100ul0fP755yuukSSJYrGI0+mkra0NAL/fz4ULFwA4ceIE
      n376KeVyGaPRqLrWHQ4HWq0Wt9uN0Wiks7OT+fl5rl69ysGDB0mn00xNTaHRaPjXf/1XTp48
      qcqH5VEil8vh9XrVJKlNTU2YTCZcLhdms5nGxka1zU6nE4/Ho15bXeN2uVzIsowkSdhsNrxe
      L4ODg8TjcfVYVZbL5VLPZ7NZ7Ha7+ozsdjuA+jx++tOf8qMf/WhfvP1huW+0t7dz4MABXnvt
      tU3HM28XYhlUsCPUyzLo/wMN15lsTAhOnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bubble chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Car fatality line chart' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Car vs Airplane stacked' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fatalities by Airlines' width='192'>
      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
      DyXaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fatality stacked bar' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dSWwjaZbf/19EMIL7KlEUtaeUysqtKrOqOqs7Bz2LPT0YbwdfbAM2DAO2
      Dz745ovtyxgw4IPHhg+GTz55YMCGAV+8uxvTY/TUFKoquyvXklIppSSKpLivQQZj94GKaJIR
      1EJRopSKH1DozghFxGPE977vfe97731E13UdDg43FGrSAjg4TBJHARxuNI4CONxomEkL4HAz
      kWUZhBBomgZCCFwuFyRJgiRJIITA5/NdihyOAjhMhD/6oz9CMBjEZ599Bk3TwHEcstksBEGA
      JEmYnZ2F3+/H1NQUNjY28Nlnn4Gixm+wOArgcOl0Oh10Oh20Wi1UKhW022387Gc/w09+8hMA
      wIsXL5BKpSBJEliWRafTgaZp+OKLL8YuizMHcLh0UqkUOI6DLMuo1WoAgM8//xxzc3MAAF3X
      sbS0BJ/PB5fLhVAohOnp6QuRhTjrAA6XTbvdBk3TUFUVsizD5XJBVVVTKTqdDjiOg6Io4DgO
      6XQaCwsLcLvdY5flQhXAuDUh5KIe4eBwLi7UBNI0Dc4A43CVceYADjcaRwEcbjSOAjjcaBwF
      cLjROAthDqdCUTVoAw4NihAw9PXuQx0FcDgV//a/foOff7fXd+zJR0n807/9m5MRaExcb/V1
      cDgnjgI43GgcBXC40TgK4HCjcRTA4UbjKIDDjWYsCqCqKoBu8JumaeO4pYPDpTDSOkCn08HW
      1hYymQyWl5fRaDSwtLSEvb09AMAXX3zhhEA7XAtGUgC3243V1VUQQtDpdPDpp5/iq6++wuLi
      IniehyzLoCjKHA0cZbj+2IW1a7oOWZYnIM34GHkleGdnB2tra/j+++9RrVYRDofB8zwEQQDD
      MKAoCqqqghByIcnMDpeLXSdGHVVzuM6M3DLn5+fh9Xpx584dlEol3Lt3D4FAALOzs06D/2DR
      ITTKaJaz0DV10sKMhZFHgGg0CgAIBAK4d+8eAGBpaWk8UjlcSWq5PRBCwHoCyL9/AdxbmLRI
      58YJhnM4NawnAL6cgSTwYD3+SYszFhwFcDg13tAUPMEYAKBdL05YmvHgGOsOp0aROtB1DY3C
      PiiKnrQ4Y8FRAIdTw5ezEOpF6JqGRvFg0uKMBUcBHE4N5wuBrxzCHYjCE4hOWpyx4CiAw6lR
      Fcl0f2qqMmFpxoMzCXY4NYrUQSR5G/XcHlRFnLQ4Y8EZARxOjT+agCy2EVu6B190dtLijAVn
      BHA4NY3iAQgIJIGHplzvGCADRwEcTo3bHwXtYiG1G+Bb9UmLMxZGVgCj8K1R5pqmaTP604kF
      +jDxhqYAAJw3AH9sbsLSjIeRFECSJDx//hyxWAyiKKLZbGJhYQH7+/sAgB/+8IdOCPQHDcGH
      8nlHUoBarYZarQZCCBiGcfIBbgBOPkAPHMdhfn4ePM9D0zSUSiVEo1E0Gg10Oh0nH+AD5EPN
      BxhJAYLBIBqNBoLBIMLhMDKZDO7evYvDw0PQNO00eIdrw0gKQAjBwsKvY8Hv3LkDoJsk4+Bw
      nXC6aocbjaMADjcaRwEcbjSOAjjcaBwFcLjROArgcKNxguEcTkVEETAn9gfARZXwhKQZH44C
      OJyKv1zdxO9kftF3zJP4FMDvT0agMeGYQA43GmcEuKKIsoKvv89Yjj+6nUDQy01Aog+TkRRA
      13Xs7++DpmlEo1EcHh5iZWUF+XweNE1jZmZm3HLeOJptCf/qP39lOf4v/8FPHAUYIyOZQIIg
      IJ/PIxqNYnNzEz6fD2/evEG5XEYqlXI2yXC4Now0ArhcLkSjUXzzzTcIh8OIxWJ49+4dFhcX
      QQiBqqp9u8U4+QBnR1Hsy44oijKRGHxNs8kH0G5oPoCiKOB5Hi6XCy6XC7/85S9x+/ZtvH//
      vntThjEVwckHGA2GsW9YDMNMJAafomzyAagbmg/g8XjwySefgBACQggURQHDMKbtf117/P/2
      Z1v4dqN/4nkrGcHf+QuPJiSRw0Uzsheot1dnGMZy7DqSLjbwYic/aTEcLpHr3WIdHM6JowAO
      NxpnIcxhYnQkBc22tcbodNh3aTI4CuAwMb7dzOIP/9Of9R2jKYL/+s//+qXJ4JhAFro7ITYK
      B9A+kJ0QHYbjKMAA9UIKYrsB1htAYfs76LAuADl8OByrADzP46c//SlevXplWxnsQ4TzBiG2
      6miW0mC9QQDXc03D4XQcOwfY2dlBpVLBwcEB1tfXwXEffhCW2x8B5+smenwoOyE6DOdYBVhb
      W0MqlUIymQTLspcl00RRZQl85RCEIqAol9P/f+AcqwCdTgdutxuvXr3Cj370I3PF9zrzcieP
      Yq3VdywR9eP+ShwA0CylQWgaktCCrqnOHOAD59gWraoqWq0WOI6Dqqp9CiDLMorFIoLBIDKZ
      DNbW1pDNZkHTNJLJ5IULPir//astS6LJbz9aMhXAE5pCPb8HQigwLg7OHODDZqgCVKtVfPfd
      d2BZFouLi31Rf7quY2NjA+12Gy6XC4uLi3j9+jUYhoEgCEgkEtc2LkgRBYQTK6ikt65tUN91
      4VEriz/c/R99xwhNA7i8dYChChAIBLC6uopf/OIX8Pn6V+YajQaazSaazSai0Sjcbjc6nQ4i
      kQhkWTZzAa5iPoB+TFy7rmmgaAZ8OYtAbA6i0ISuaxOJeb8J+QC6ooDTB9ZaLjnHYKgCMAyD
      VquFWCyGWq0GSZLgdrsBAKFQCE+fPkUulwNFUdja2sLHH3+M3d1duN1u01S6ivkA5Ji4dkJR
      4PxhuNx+AICiiCATqoF/E/IBJJq2PX6Zv2+oAgiCAEIIfuM3fgPVatXiAiWEYHa2u1WmkQdw
      7969CxT1cmhX82iW0nD7I2g3SpMWx+GCGaoALMuCpml8+eWXqNVqWFpauvbZP6fBF0l0RwHO
      C180AWcS/GEz1DaRJAnv379Hp9PB6uoq6CHD1YcGoSi4OC8AgPUEnOb/gTN0BOA4Dr/7u78L
      t9t9pSaxDg7jZKgCUBQFj8dzmbI4OFw6V8c94+AwAa5/bMMHjK7raOT3IHV4AATR+fVJi/TB
      4YwAVxhd0yC2m5haegBPcApC3XHLjhtHAa4whKLgiyZQ2n8DucPDG3Fqro4bxwTq4a9UNvB0
      /+d9x/yBewB+ZyLyEELgC8fhC8chCU0oojAROT5kHAXowavJ0NRO3zFOlSYkTdcEatXykAQe
      ssAjnFw91XX/5w//PaRWu+/Yw7/0O1j+/OFFiHmtGVkBjBRJQgh0XTf/1zjmMB5alVw3RskX
      hCp1Tr4AwP2tb6E1mn3HIk/vAXAUYJCRFEAURbx9+xaKoiAajaJQKODOnTvY2dkBRVF49Mip
      pTkOCEVhavk+GoUUaNYNzheaqDw6gGyrhZaiYDUQmKgs42IkBWBZFl6vF9lsFgDwySef4Ntv
      v8Xc3Bx4nocsy6AoygyHvkr7Bdgl92u6DkVR7OU8OnfZqKoKXddQOXgLQtMQGmUQQkFV1ZPl
      sUli0zTtXL9D03W8rlTAUARRjsPPDw/xl8/5boa1i8t83yMpgKZpmJ2dRTabha7rEEURbrcb
      kiSZjb83BPoqmUR2shgh24TYOMXIZIr+0hQFgID1BhCYmock8AB0y7u1xeZ1U9T5wtIJIYi5
      ObyrN1ARRcTcHHDOUHe7EOvucQpfvjrARqrf7Ts/HcDvP1kb+Xl2jKQAsixja2sLsVgM09PT
      2N7exoMHD7C7uwu/398XOHfV8gG66JBFAbqmweX2gQBHCmD3txOS/0gYXdfRKKTQquYwc/uz
      c7zPcyoAgKTXh1lPN1DwoNUy39voDFeAV+8L+D/f7vQdf3Q7gb/4w/EuBo6kAG63G48fPzb/
      HY9382nv3r07HqkumEbhAIokgKJdUGQReLw8aZGGokhd1yftcoOiJ+u042UZHE3jbb2GKHux
      JXLWhSLEer8CLLXGX6DghrpBdSiSCELJ9mbPFYEQgqnFe+jwVchiGxQ12ZD0980GAi4WOoCt
      Rh2nc8qOxqetLNbLb/qOuRvj/1Y3UgGC8SUEpnUAOjp8bdLinIjbH4HbH5m0GIh7PHhbq+Ne
      JAz2ypm1o/Fh/IozIgk8NLXb+7vcl1eK+7rTUVQouobvymVUOtay5teRGzkCNIsHUBUJDOtG
      ML44aXGuDXVZwkehMHhFRkE43aLcZfMn3+3hP/zfF33Hgl4O/+Yf/r7t399IBWA4D8LJNWiK
      BLHdPPkCBwDArUAAHEVD6+hYDvgnLY4tHUlBud4fMyUrw9ehbqQCuNx+VDNbgA64PI4JdFp2
      m02EWQ7ZdgttRcG4HJKqrkPVNDAUNSabXIfUaUFu83AHIgCGe6xu5BxAaJTgDkTBuL1HC0wO
      pyHKufGuUceyP4Bp93jSZduKgj85zOJ5pYyfH2ahjKEMv9Csop7bA6FpFHdfQVOGF9q6kSNA
      YGq+G2DmDUJsNyYtzrVh3ufDvM8HXdcxM6Z8cVFVQRMKXoZBXZKg6ucPm3G5fVBlCe16EZSL
      PXb95EYqAF85hCzw0DQFtOvD3/Ng3IwztCXCcXgyPQ1JVTHt9sA1hrUOxsVhZu1xN6OOr8I2
      OMr423M/7Rxomo5cxWqCxEIecK6LE42iGYQSKyCEgC9nL+w5Diejaho0XUeY41CXxpN7oWsa
      6vk9+GNJEIrGcVbVRPMBWh0Z/+Bf/w/L8X/+d38HD1cvLv0vnFgB0P0NEffV9GbcFEpiB98U
      i4hyHB5GomOZlLbrRRCKQjm1AYZ1Y2oqNvRvR84H+P777yFJEqanp1EsFs18AEIIHj9+fKZh
      sjdE+TIjRwkhR+W4e2TpkefqxLB+yBA8jEQx6/Vio1bDwzFsw+UJxtCuFxGZu41y6nuQY1at
      R1IAjuNw+/ZtvHjxArVaDY8fP8bXX3+N+fl58DwPRVH6RoRhcd+qqkDXdZQPNqFrKjRVQWR2
      9XQx7yNyUj7AYbuNt/UaWIoGQxH8WD9fHP2oqOqQ8uinzAdQdR0pnoebpjHr9Y4lH8Du2Hnz
      AeJuN35VLiHbbsPvYkATcvQtrM/TT/E8VevmUfCVQ0itTfgiCRBCDb1uJAWQJAmvX7/GkydP
      8PLlSwiCAK/XC1EU+/IBNE3r9rJDenUjbFoR2whML0Dka5A6PCiavrBapMPyAWiaBkUo8LKM
      oIuFn2FwKLTNc5cNPWQySFPUyfIQ4Be5Q6wGg2jKMg5LJfz501x33C2PeW+jQlEU8oIAjqbx
      KDaFbwoFtBQFNE3blrE/zfMoioLYqsPtC3dDxxkWqiwOvW4kBVAUBS6XC+/evcPS0hLev3+P
      Bw8eYG9vD8Fg0PKw4WZNVzmmlu5DbDfgCcbMgrSXagoZzyPAWjCIuiRB0TXE3G5TxktnyDOP
      61B6CbEsUjwPVdex4POb144szpBj5303cY8HhY6AP83lEOZY+Bim+xuHyXHC8wgIPMEpQNfh
      DcfBuDjQ7PD6tiMpgNfrxWeffWb+e2pqCgBw586dUW4HimbgCcQgCU1oQ4b+y4IAcFEUiIax
      LMpMisexKdNsybZbJ/z15OBlGTvNJhhCUJMkPDxqS0B3PtZRFCi6Dt8ZNmgkhMAbjp/qbye+
      DqDrOop7r6HKHbg4H3yRxETl2ed5ZNttHLbbSPq8mLumu0QWOx3Imoq8IGA1EJy0OEMJuFy4
      H45gu1HHg0gEVE/fn+KbSLda8DEutBQZf/4Cnj9xBQAATZWhqSpURYY+hpXA86DqOmRNw7zP
      B46mr2nzB76vViFrGtaCQbyuVrE0aYGGQAjBeiiERb/VHa1oOhRNh6iqULTTbVg7JbfwmO/f
      BdQH79C/vxIK4I8mu8n1rRo4f3iisky53cgJbTyMRlERO9fWFZr0ejHr9YKlKAgTNitPg9tm
      knorEMCS3w8NQE0UT/Ut7ghFxAu/7DtGdYaXcLkSwXCdZgV8OQNvOA6hVpyoLHt8E8v+AL4u
      FLDPX99Auaok4lmpW1XBxqN4LVB1HcVOBy5ChvkEzs2VGAEYzgvaxaFVOUQkOd6yF2dlxR+A
      qGm4H4ngbb0+UVnOg6RpeBSL4ct8Hix9Jfq5M7NZq6GjqSh0BHRUFfMX8IyJKwAhBJFT1ry8
      DEqdDnb5JkRVhf8abwq4HgwBuo6Y2z22yM3LJsSyiNM0ip0OcheUuDRxBbhqCKqKj0JhiKqK
      rNA++YIryutqFR1VQdLrw/tmAx9NWqAR8LtceFOtgqEorASCFzIfcxRggPuRbvUFXdcx5/Ph
      ukYEzXg8SHq98DAMtupXv/KFHakWj4TXi6oogpflC/HITVQBvJqMf7n7Py3H5zsfA5jsZhCE
      EHDXeGvYXkV+GIlOWJrRWAsE8atyGRGORYC4ztQV8bKMqigi7vHgOANwwrMjHW5dsfxHXVvv
      +9XjtKETV5H9o1AOhlBonmEEKHU6+FW5BA06fpHLQT6mOPPICtDpdKAoCmRZRrVahaZp4Hke
      7fb1tZsdrhZuhsZHoRDaioKD1uld0hxNQVRVZFptUIT0rS4PMnIw3OvXrxGPx1Eul8GyLEql
      EqrVKmRZxtOnT8+cDyDrGmiQo6rIDg7AraMQjhmvF5/EYqc2gQIuFr87Nw9d15E7iugdxkgK
      wDAMbt26Bf5ooejOnTv48ssvsby8bLs/wDABNKWbD/BlPg8XTUFQFNwLRxBVVMjy8Ez+86Db
      rAppmg5Zlm3zFnRduzBZjoMT2/j7uW8sx6PCDyDLJ8T22O0PoJ7vndrF5xvvbVRUVbU9Pvgt
      CAD6KL/kpOdpmgpBUVCTJMx6vYi7PSBH97Rj5PLo6XQa7XYbLMvi1atXWFhYQDabNUOlCSFQ
      VfXYct7qUYSfqKkIcxxUTUdHVcEwNFwX5IO3izOnKAKXy2UrJyHUhclyHISm8HE7ZzkeIPrJ
      8tjtD0Cf753a1fI33tuoSEOcDMO/xcnPoygapU4HW406thp1LPv9WAmHhl43kgLQNI3V1e7i
      FcdxaLfbCAQCSCQSZ550EULw45kE2ooC1eOB5wxhr1eFzVQJf/oy1XfMzTL4W7/38bnuq+s6
      vikVIWsaZE3DZ7GpCfvGrgcsTePjSBRRjkNOEI4NBRmptVEUBZ/v1xXVgsHukOz1Do+6Ow5F
      18HRNKqSCE6/WNdjSBUxJffHxwfU8xV63c/V8d/+bKv/nh723Aqg6jraR2bhYbuN2piqJnzo
      uKjuxPf/5XJwURSSieHdxsS7W13X8fVRKty0240Zj4ZbF/i8v1Z6ib9y8KzvmHdJBPDb57yz
      DrHdhCzw4PwRwMOe834AQ1F4HIuhKHQQ4VgkR+xgbhqKpiPbbpmWoHLMEDBxBQAADTpAuhGM
      c77T1eq0m5QRcroUvaYs40W5DB3dFMhxRCIJzSpalUP4IgmUU98j5P98DHcFwiyHMMuhIUlo
      TyA5/zoS93ig6N16QzE3B9e4q0KMm7jbA5amMO/1oTPEMzDIT//xv8BB5hDbjQYIgAeRCL74
      m38Va7/3Wyde+7pawWdTU3DTNP7k8HAsCsB6/KjLElrVHGiGBTWGuYyu69io19BRVJTFDtaC
      Idweg6wfOi1Zxla9Dg/D4FmphOTM8CzDK6EAxq6Dr6pVTLlPVxfmQSuH3MEr/L34DFRdx7f7
      KcTln5zq2oeRKH5VLkPXddwNjycBh2ZYzKw+AnQdQrOCY8uRnYGKKOLT2BRKnQ6oa7qie9l4
      GAZhlsP9SARhlsWQzSgBXBEFWAsGMev14mWlAi9zerfaejCEb4pF6MCZ4l38Lhd+Y6Y7Mdpt
      jifMVte17obWLg6KKAAkCQAo5it48c33lr//c3/p6al2WFz2B/CmWoWPYbAWvLq5vcNotERU
      +f56/QxFYW764n4LRQgexbrV4NaDoWMXV6+EAgiqiu1GA7KmQTiDnTvn82HuqFrx3hmyt4od
      Aa+rVTRlGY+iw8vmnYV2rQhCKDQKKXC+EFSl61nyp/ew/h//neXvyV/4IXCCAqi6jq16DU9n
      ZvC+0USm3cbCWKS9PFp/+qfI/sf/0neMjUYw92/+xaU8/6Q54ZVQgBTP494Ipsj7RnfT5oNW
      C09nTu8h32vy+DQ2hY1aDakWP5ZYeU8wiuLeG7DeIDRFBs2c3wtEE4Jptwe/PEptXA4Mz229
      qvhUCXNSfwl6Wr4SzQ7AmBVgf38fDMNgbm7u1NcQQvDnkl1zYeaMdrOkaWirCmIch9gZakou
      +f3YrNVwPxKxLZU4CqqiQNcUyB2lu/XqmO4b93gQ5TiURREVsYOVsdzVwWBskWc8z6PVaiGX
      yw2tBXoSZ11FvhMK4bPYFKqSeKYJ4najgeaRp2BcMf+K2AbNcNAUCYQi0E7pzTqJb4oFSJra
      LQ1yjQt1XVXGNgLIsgyv1wtVVaGq6qkmeOflWakEmhDcC0fwrFTC753yuhDL4vOpKQiqinSr
      hXHswOsOREG7OBCKgqYqoM8wmR8GIQS/P78AhhAs+gNjG63GTaneRq3Zv2skx9JYiIcmJNHp
      GZsCBAIBbG5udm96SfE8HobGy0oFCz4fZjynXyX9KBwGhW7MSIg9v60OdBsr6xn/XgPGIg7d
      fcjY7z8OOv/7f6P63/9X3zHfrRXgn/2TCUl0esbWUhmGwRdffAHg8grbPohEcTfUnTyfJY+A
      HkG+nz57j//77U7fsZmID//obzw9870+NPyqiJmB+CpWubjEqN39AnYPCv0yeN148unZS+oQ
      /QLGVV3XoarqseXRdV0HVBXimzeWc+zqKojPN1SRdF2HtLkJfSA4jEkmQU9NHXudvL8PbaDe
      Dx2JgFlYgJLJQi2X+s5R/gBct1aQq7RwWO5fM/BwDD5anEK5ISCV778nQ1N4eCsOrdmEvLtr
      kYV7+HDoxg26rkOXZUgbG5Zz7O3bIB7Psb9R/P57YMCd7JqfBxWNHnvdceeUgzTUaqXvOBUM
      wbW8BCWXg1rob5DE6wW7tga1VIaS7S9VCBcL7u5H0Op1yPv7/ecIgfvjjyGn01DL5f7nBQJw
      raxAzReg5PtDxYnbA3b9NrRKBXI63X9PhgF37559ifeLUACD4/IBNE2Druu2ddsNBRpmSimK
      cu3PGfMku49iOBHs3puu69A0bWi9+6v0G0c9dxzjft6FzlR7P3Cn0wHP89je3u5TDF3Xkclk
      LLnE5uYZioJms4mdnR2Ioth3rlgsolar2V6n6zqy2Sw2NzfRaDT6zgFAPp/HwcGB5Vy73UYm
      k7G9pyRJ2B/osYxzqqpib2+vL8up93mCIGBrawt7e3vmu+k9Z7yb3lFT13Wk02kIQv9KqnGt
      LMvgeR47OzuQjkZD45mapiGVSmFzcxOdTqfvXKlUQqXS35sb52q1GorFou05AGg0Gjg8PETp
      aG2i91w6ne6bqPee0zQN2WzWfLe9721/f3/oDi7D7lmv15HNZpHNZlGtVi3PazabqFarODg4
      sJwrFApmW7pQBeg1f4rFIt6+fQug25CMc4qiYGNjA+We4a73ularhffv3wOA+dIJIdA0Dbu7
      u+YP7L3WwMhRNj5o77lKpQKe55HP5/vOFQoFvHv3ri+FzjhXrVbx9u1b8+X1nms2m9jY2Ohr
      rL3POzw8hCiKZhrp4LvZ3Nw0twAyzsmyjI2NDfMDD17XbDaxvb1t/p7eZ7bbbbTbbei6jsKR
      eWK8t1Qqhf39fcvebEZn9P79+z5F7v0d+/v7qNVq5vfqPdfpdPDixQvkcrm+c4eHh/j2229x
      eHiI6enpvnOtVgvff//90GIKPM/j5cuXlm/IcRz8fj8YhjGVf/B9p9Ppvvfd+3ueP3+O3d1d
      0H/wB3/wB7ZPHjMejweKosDv9yMQCJi9GEVRiEQiCAQCkCQJkiSB7fHMsCwLQRDAsiymp6fN
      YYwQgng8jlarhXw+j2AwaJ4zckc5joMkSYjFYvAMlAdUVRWdTgeJRAJut9s8HggE4HK5kEql
      oCiKmewDdD+GqqpotVpotVoI96xesyyLaDQKWZaRy+UQjf46NknXdbjdbni9Xsiy3HfOeAea
      pmFubg4cx5kfi6IozMzM4PDwEI1GA8FgsG/k4DgO9XodkUgEkUikr5ejKAocx6HT6WBqagrc
      0UIhIcT8dzqdhsvlMn8/IQSxWAyEEASDQRSLxb7EJwOaphGNRvveG9Dt2BRFAcdxCPSsWrvd
      brAsi0ajAV3XEQr92j3Ksiz8fj/C4TAKhQL8PWXSq9UqaJqGqqrwer19slSrVWQyGWSzWSws
      LJi/r/e+xm/vTdQyvqGmaWAY5vLqAhFC4PV6kcvlTI01SKfTePfuHQ4ODiy5m81mE/V6HaVS
      yWLuKEf7SS0vL1vMlmKxiK2tLRBCTDOnl1qthtXVVbN3NKBpGu12Gz6fz9IrJRIJ+Hw+3L59
      29YsKZfLSKfTlmRvQRAgCAJKpZJtbqrP5wPDMPjqq6/6hnxCCJrNJmZnZ7G0tGSx+2u1GlRV
      Bc/zfaME0N3Js9FoIJlMWswdQgh2d3fBMIw5qvb+/lqthrdv39omkpfLZQiCYDGTgG6jXF1d
      tXynTqeDUqmE+fl5LCz0RzOpqoqdnR1sbW2hORCYGA6H4fP5bOdCHMfB7XYP3fwvl8tBluU+
      ywLovmujsySEXJ4CKIqCWq0Gmqb7JiOEEHz00Udmrz84KfR4PFhaWgLLspaUS6MHSqVSfeEX
      hBAkk0n4/X6oqmrb6KamprC/v28btrG4uIhwOIxYzBool0wm8f79e3NbqF7m5ubg8/ksPbyi
      KCiVSuYEdpB2uw1JkvBbv/VbfT0nAMRisaGKFQqFQFEUWq2WRVbv0c6Q6XQa8/P9dZVpmkYw
      GEQikcDy8nLfuVqthlAoBJqm+3pjg2g0Cp7nLc9TFAWJRAJbW1tIHoW2GGSzWXz00UeoVCqW
      388wDO7evYtIJNJnWgLd72h0bINKFQwGcfv2bfz4xz+29P4AEI/HIYqiZQQjhODg4ACiKEIU
      xctTgHa7DVVVIQgCUqn+BHLjpXs8Hkuva1SgcLlcfaYR0O3lCCFYWlpCNmvd8UOe+FYAABPQ
      SURBVD0YDEKSJNthfHd3F5qmmRNEg2q1imq1ilKpZFu2Y39/H5pmXyoll8uBEGLpdQKBAObm
      5iBJku11giAgnU7j2bNn8Pv9fZ1As9k0J3uDIyfP85AkCRzH2Y465aOch8HrAGBhYQFff/01
      Xr9+bTY8w/vm8XiwurpqUUagO0fy+XyWhlyr1fD69Wt4vV7sDrh9Z2dnsbOzY76jQZrNJgqF
      gsVMBbqjrtfrtTTyarWKVCqFg4MDy2hsyOnxeGxXzxOJBGaOgicvTQFkWYbf74fH44Esy317
      CHs8HnNiHLSJeSeEwGezLsBxHBiGQSqVsgytQHeCRdO0ZZgHuj2P3csRBAF7e3vQdd1iVgAw
      t4C1c18mEgk0Gg1LwyGEoFAogKZpSy8HdBve8vIyXC6XRSaKorC2tmb7MWma7q5As6zFTDDM
      JeNvBp+XyWTw6NEj3L59u++80ZDfvXtnazoCv37vvUxNTWFpaQmSJFlGDlmWzc7KbrIbjUZB
      UZTlvYmiiN3dXbhcLst1DMMgFoshGAzajvDGe7E7VywWUSgUwHHc5SnA1NQUVFVFNBrFysqK
      +dIlSTIbh8vlsvQsxqTN+P+9VCoViKJo25MD3QZpvKhBpqenzX2Ne0kmk4hGo5ienrZVkJmZ
      GbTbbdvnZbNZhEIhW+WIx+NYWFiwHY18Ph8URcHi4qKlYem6jlgshqWlJduGPDU1Zevfdrlc
      CAaDaDabltFB13XwPI+NjQ1UKpU+83N6ehorKytmbadeBEHA3Nxcd/J4zCLeoAJUKhWsra1h
      fX3ddjQyzMPBjspQCkEQsLTUv8tZLpeDx+NBuVy2jCqCIGBmZgYsy9qulxger0udA2SzWVAU
      BYZh+rTS8AOXy2W0Wi1LozNGC4qiLI01HA5DVdWhQWK7u7vw+Xy2NiLP83C73ba9XDweRyaT
      QTxu3WqzVCrB5/PZKgBFUaYnpBdVVfHy5Utks1nbySMhBKIoIpVKWX4Ly7LY3t5GNpvt+5i9
      u6bbKVy73YamafD5fJZJMPBr02LweT6fDz6fD/Pz85Zz3R3ctaErxq1WC8vLy5YOx3BSvHv3
      DrOzs5brpqam4HK5LOdcLhcURQHLshYTl2VZbG5u2pqqxsR4mJzRoxVxVVUvLyEmEolgZ2cH
      siz3vSCfz4enT58il8uBZVlLb5bP51GtVuHxeEBRlGUibLi07DAK9tqZVbFYDJqm2SpHJpPB
      6uqqZfjUdR3z8/PodDqWnsxwR9o1cAC4e/cu3G43bt2yFn0x6iwNdgCappnV96iBnd5VVUW1
      WjVX0wcbq8fjwdzcHPL5vGXCTlEUBEFAIBCwKDlN0zg8PAQhBPV6vc/V22630Ww2TdfkIFNT
      U+YkuPeZqVQKq6uroCgK7969szgJXC4XZFnG1taWGU/W+zsbjQYqlQpisZgpz+CI0Ivh/aFp
      2nYEKBQKWF1d7b7XoXcZI4YN6PV6bbWyXq+bw+bgbH9paQnJZBLT09OWF0cIAcMwprdnkFgs
      BkEQbM9tb2+jXq/byuP1epHJZFAfiBkqFotIp9O2cwqPxwO3242FhQVzscfAUJZMJoPDw0PL
      tYIgoNPp4MGDBxZfvsfjweLiIm7fvt3XOTAMg5mZGXQ6HczMzFg6jlqtZroCB9F1HaIomk6J
      QWZmZrC9vW1RHON5sVjM1kNULBYxNTVlcS1HIhFsbm7i3bt3tqN1pVKBIAi2nUMkEoHb7caT
      J0/6lPE4wuGw2alEItZgd6Mz3t/fvxwFMOzwtbU102wZFDifz6PRaFhebLvdhizLtv5gWZZN
      bbczZURRNCtX98LzPD755BPMzs5anlcqlSBJku2oEo/HwXEcKpWKrd/98PAQlUrF4s+WZRn5
      fB6Kotgqo3pUuLbT6VgaCMMwePbsGXZ3dy2mFcuy8Pl8KBaLtu9U13WwLGtRckIIQqEQisWi
      rQ89n8/D5/NZvFm6rmN6ehqVSgWtlnX3ea/XC57nLd6cSCSC27dvm4o8iN/vh9/vt3R+QNeT
      V6/X8fz5c1sPkh3GvKnValnuyfM8NE0zw3AuxQRSVRWpVAqapqFer+PevXt95w1X3sLCgqUn
      8/l8SKVSkGXZshhkrCICMN1aBqIoYmVlBeVy2WI2HRwcIBQKmS6/Xqampmx9/AZGIxjsOQOB
      gNmgBs0qv99vzisGlVjTNHi9XoTDYdsJIsMwCAaDtvZ6rVYzKykPrncQQkDTtLnyOfgbms0m
      Hj58aPG86LqOeDyORqNheTf1eh2KotiagNlsFouLi9B13TLKnVTUttPpgKIoi5vbeGY8Hu/7
      1idRr9ehqipEUbSYQMbagCiKmJubu5wRgKZpzM3NYWFhAQ8ePLAsobvdbgiCgEwmMzQoyu12
      Wyaeoiii2WxaGqyu69jd3QXHcZienraMAJFIBO12G6Io2vZkdpNRg2g0Ck3TLLazoiiYOgrF
      HpSzXq/jzZs3kGXZdiVUkiTTLBl8brFYBMMwqNfrFqXjOA6yLEMQBIti6bpuugjtzLxGowFZ
      li3ve3t7G8ViEfF4HIlEf0Epj8djdmKDzxNF0RwZhrlP7TBG8EQiYet0MMzUvb09W/PRDr/f
      bwZRDr5PURSxs7OD7e1tpFKpy1EAw/9r9I6DH6TVanVX5SjK4u81GkehULB8LCNUoFar9Z0z
      1hPevHmDjY0Ny4dMJBKYn5/H2tpaX1yKgSiKePXqlcWWBbruN4qibJf7DdfaYI8biUTw9OlT
      xONxyzBuhF4UCgXbESCRSIBlWbjdbktv/fz5c0iSZHpRevnqq69QKBTAMIxlBNQ0DcvLy7Z7
      IvA8D5qmsbW1ZWnIe3t7KBaL4DjOMh8z1gBqtRrW19ctv2MYxujfbDYtJhfQNYEqlQrm5uYs
      HecwSqUSdnZ2QFGUxbOUSCSwvr6OH/3oR5idnb08LxDLsnj+/DlmZmawsrLSNzQZ/v9KpWJp
      rEYgFWDdUIGihtfun5ubO7Y6xZs3b5BMJhEOh/uG+lqtBr/fb+vukyQJs7OzODg4sIw6HMch
      lUqhWCzauvpomraEJABdxUmn05BlGclk0tKz5nI5c8+FwRyJ3/zN30S73cbh4aHZkAx+8IMf
      4ODgAM1mE4Ig9P3GVqsFQRDMVfLehnXv3j3zPQ++2zt37kBVVWSzWVQqlb53QFGUJQTiNHAc
      Z0aJNhqNvneUzWYRj8fNtYDT3t9Y6S0UCigUCn33HDS1Lk0BjOjEYDBoGZY4jjMjOwcbQLPZ
      RDQahaIoSKVSiMfjZsM0JteCINguIG1tbWF9fd3SkBVFwfLysukJ6SUUCsHv9/etVhsYXozF
      xUXkcrm+eUe1WjXDjwfnI8fh9Xrxgx/8wJxEe73evnfAsixardbQRA+appFMJi2NleM4rK2t
      2ZpyoihCEAQUCgWLsnIch0wmg3A4PLRziUajY9s0hKZpLCwsIJFIWO5ZqVTQbrfB8/yZFcww
      AU8qznBpC2GG12TQ86DrOn7+85+jXq9jenraMhEKBAKo1WpoNpsW32+n04GqqlhaWrJEgwLd
      ob43IcbACD4z3I+97O7u4vnz5yiVSpZe3u/34969e7Zep3g8jvv37+P+/fu2C0/HoWmaGV5t
      57Hx+Xzw2KRBVioVbG9vD41bMq4fvK5Wq5khKHZmRTgcxsuXL/GrX/3KYpK+efMGr169ssT7
      jIrhyt7Y2DBzMwxWV1fNEIu1tbPl+759+xb5fN7iyh7k0kaA2dlZaJoGURQtmv7jH/8YxWIR
      pVIJ4XC4TwmMnnhpaQlut7vvYxp/l8lkbKMa3W63beyN4R0x/Na9GDH5mUwGpVKpb2K2uLgI
      QghWVlawuLhoua+madA0zXbh7TjS6TQYhrENBotEIuail6qqfaaj4RiwCyE5jvX1dWiahmq1
      aq7P9JLP53Hr1i3TU9aLYaoMS8kchXA4jHK5bHmWx+OxfSenwdi56CQ5L0UBZFnGmzdvIAgC
      FhYW+oYlQoi5gGSHkbCRy+WQTCb7eixd11Gv17G6umrp5YxGeHBwYDEDMpkMRFE0s4p64TjO
      nD8MXkcIMVemY7GYZcFrb2/PjK159OjRKd9Od5RLpVJmYojxW1RVxbNnz0wv2mDHwbKsaSKd
      JbVb13W0Wi2z9x2E53nzfQ92LEaG1WkXpU7D4eEh7ty5Y0aMjoNQKIR6vX7ynmJje+JxD6Eo
      M8bczjV1HNlsFo1GA9Vq1WLPGffNZrOWFc9nz54hnU6DZVlLj7y+vo4HDx5gYWHBsmjVi537
      0HA52q2whsNhW3v8JNxutznJ7YWiKCwuLsLlctmaObVaDV6vF8Fg0HYRyQ4j5Hl7exvK0S6d
      g0QikaGr66Io2i4gjooxZ9rd3T3zyHkc1WrVdIcex6WtA6ysrODJkyeW8NuT4HneHCUGG5Yk
      SeZq76CP+MmTJ0gkEpAkydYvbaRUnrUnSyQStknlwFE5k6P0x7NQKpWQTCbNBa1eGWdnZ/HJ
      J59YwiSAbkOdn58HwzCW0WgYuq7j4ODANIHsXK+SJMHj8VjMQ03TkEwmza1wx4Gx/iOKolkw
      4LxomobFxUUkEgnbUIheLr1M71lLYRhuuXq9DlEU+xqXEe9dKpXw8OHDvuuM0N5hYc2jUq1W
      kUwmLYs2tVoNjUYD+/v7tsv9xzE3N4cXL14MDW0G7EcjY3NyiqLM9NCTMEYVj8eDfD5v7vAJ
      dJVDEAQ0Gg3cunXLYn8bLtVmswmWZW0TZs6KYcbRNI27d++e+35AV05FUSw5xnZc+W3ZjdBW
      SZIsjcNIeDHiu4cxzkp1zWYTnU7HEp4bCAQQiURw//592171OLLZLObm5tBqtYZ6c+wwCgnY
      BcOdRDqdNpP4e2m1WggEAmg2m5ZV8lAohHK5PNb3yfO8GWJhl9U3CqFQyLQchlWbMLjyCtBo
      NLCzs4NKpWJZRX379i0EQYDf7x95i9azYgRnDcb7GJlndivWJ2H0xjzP207ah8EwDMLhMFqt
      1plMkkajgWg0ilar1bcSTgiBx+MxXdWDISTZbBa1Wm1oRtwocByHhw8f4u7du5YJ93kQBAE0
      TaNYLA4NUQeuyAYZx2FM8Iyw2F4+//xzCIKAXC5nVnK4SGq1mjm5qtVqFs9VMplEOp0+s+vO
      7XaDpmlEIhEsLy+funHt7OyYH9oIlzgNwWAQNE0jEAhY5kccxyGZTIJhGMuqPMuyePr0KXRd
      P1O8z3GIoohcLgdVVTEzM2PJiR6VhYUF7O7uYm1tzRK20cuVHwFarRYODw/x4sUL25fu8Xiw
      srJy4Y0fgJm4T1GUrZ2fyWQgSZLpKjwt5XIZMzMz5oT9tCPA0tISVldXbXMljqNUKuG7776z
      FPICum7ncrmMg4MDpAdqbJZKJbOi33G96lkIh8NYWVnB6uoqWq2W7YLmKKTTady9e9esLTSM
      Kz8CMAyDlZUV5HK5sS6+jMLBwQGKxSL8fj8qlYplaT6RSKDT6Zy4+tiL4QYslUpmFYvT0m63
      zcoPFEVZeuxhGJ0GAFvX48LCAiqVimVEWVpaMqv72SWvjIrhCTJC4sfBzMwMtra2TnStXnkF
      MOy4wcpnk2BxcRELCwu2Q3SlUjGjR88yGhn1PXmeh8vlQjKZPLUJEA6HzZCNs/jlDZdyMBjs
      W3U3wshXVlYQiUQsvbHH47HkcoyDbDaLTqdju2o/CkbBMKMU5HFceRPIKKdRq9XO7F25CIxC
      tIMv1vDJ24VDHwchBKVSCYqiIJPJnNlla1TbO8nb0QvDMHj//j1yuZyl0SmKgnw+b4ZnXAbT
      09Pd0OQxPS8cDpsxXid1JldeAXw+n5kUbhe7f9n4/X5sbW1ZArcODw/x/PlztNvtM20SaExG
      GYbB48ePz7S11LAkmpNoNBpYW1uDJEmWLDIj99hY1b5oNE3D3t4eFEWxzU8eBVmWUa/XLcn5
      dlx5BTDiOW7dujVxE8hYdLIrqpVMJvHpp5/C4/GcyZ8tiqJpauTz+TM1ZoZhTNPwLGZXNpvF
      wcEBZmdnLbIadZjsIlMvCiNs+SyJNMchCAJcLhdqtZptUlMvV34O4Pf7kU6nIUmSbYHYy8Tw
      uReLRVvb0uv14qOPzrbrsMfjwZMnT0aS52c/+xlmZmYwPT1tW95lGKqqmibXpEfVRqNh1uls
      t9vHljs5LYZZODs7i1arZRu5a3ChO8SMA2MTDE3TzJDoSbG7u4tcLgev14uHDx+OZSfMVqtl
      7nHAMAxu3bp16vsao0er1cL6+vqZlOAqkc1mkUqlzGzB82Lkexgu2+NCNq60CWTU4jfKJl7W
      kDyM5eVlPHjwwDb4blSMFD3jv7PAcRxu3bplynSd0XX9TBP548hkMggGg8jn8yeao1daAYw0
      OKPy2WV5JYZBCEEgEMDdu3fPNNE9DiP/IBaLncl7NCjXpDuHUTE2M/F4PLY506MQDAbNTMCT
      3KBX3gSq1WpmsSUjKf1DQhAEbG5uQhAE3Llzx6xbeVMwvGnT09PY2NjA/fv3L/X5V3oEALqT
      YJ7nUSgUbKs8X3eMrZWMsO4r3h+NHaPkzeDea5fFlR8BjHr9t27dgsvlGsvE8ypi7B4zzkjL
      64Bd2ullcuVbk5Hwvbu7eyVWgi8Ko5ThTWr8wK/nL5Oax1x5BTBKnxg7Ijo4jJMrrwDGCHCa
      9DYHh7NyLRTAKF846VAIhw+PK68Af/zHf4xWq2W7MbODw3m58l4gRVFQrVbNbW0cJXAYJ1de
      ARwcLpIrbwI5OFwkjgI43GgcBXC40TgK4HCjcRTA4UbjKIDDjcZRAIcbjaMADjea/w+aeUda
      pB8yggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAeZElEQVR4nO2d23Mc153fvzODy2BwBwQIoEgRoEASYpE0DduSabukjcsPrtpspZTKQ/Z1
      /Sek8pDdrVQlr37aS21SSe3GuWhpOXbJVUqyskRdLFkiRVEECYK43zEABnO/9L37nJOHAYaD
      memZnpmea59PFUvQgN3nNKe/3ef8zu/3PS7GGAOH41Dcje4Ah9NI6iIAs5cMpbQezTesPcaY
      6bXXCn6N5dFh25kKwBgDpRSEEHg8nrzfG4aBjo6adqGh7Z1+UW53/V60/BrLo6Kz7O3tIRKJ
      4PLly1hfX8fIyAhcLhfi8TiuXr2K5eVljI+PY3JyEi6XK/MnF7PPa0Uj2sv+b73a5NdonYoE
      MDo6Cr/fj0gkAkVRMDQ0hK2tLZw7dw7z8/OYmZnB/v4+zp07B5fLBUppwSeEy+Wq65Oj3u0B
      6bdgO1/j6fCnVa+xorO4XC709/fD7XZjdnYWCwsLDRkLcjjVUpEADg8PoaoqvF4v9vb2MDk5
      ieHhYRwdHeHWrVvY3d3F2NiY3X3lcGzHVY91ALNJi67r6OzsrHXzDWuPUgrGWMEAQK2o9zUS
      QgCgZa+RrwNwHA0XAMfRtIwA4r/8FdjJ65bDsYuWEQAVUtB39xrdDU6b0TICYAaB/PRpo7vB
      aTNaRgAAgzI/3+hOcNqMFhIAoO3uwYhEG90NThvRUgJgsgx1ZbnR3eC0ES0lAACQHz1udBc4
      bUTLCUB5+hRM1xvdDU6b0HICoKkU1PX1RneD0ya0nADAGJTHTxrdC06b0HoCACA/4uFQjj20
      pAD0w0PogUCju8FpA1pSAKAUypOFRveC0wa0pgAAyPPzvAKNUzUtKwB1eRlMURrdDU6LU5EA
      UqkUjo+PQSlFOByGJEmQJAnhcBiMMYRCISg1vjmZqkFZfFbTNjjtT0WuEKqqwu/3Ix6PwzAM
      yLIMAPB6vYhEIiCEYH9/H3Nzc7Z2Nhdlfh493/1OXS05mh3pdx9g8J//caO70TJUJIDOzk6E
      w2F0d3djcnIS+/v7AIBz585hYWEBc3Nz2N7eBqU080cvsHpLyihwoTR/vC8/XUSfLMNlsT60
      nPbs4NQpo55ubdreXsF/61pxOg+r5zXa+T1WJIBgMIjBwUF4vV6sra2hu7sbjDGsrKxgdnYW
      T58+RV9fH9xuN9xud1EnL6vFzW53/lOehMNg+350Xb1iue/tXBTPGANLpdDR0VG3t2IjiuIB
      +77HigQwMzOD6elpdHR0YHp6OmNSRCmFx+PB2NhYfYySGEP8zh2M/8WfW34LtDNMkkATCYBS
      oM43ZKtSsTHW6RPd4/FkrOpOnwKnn9UDdWUVwsef1KWtZocIAoxwBODhYcu0bBg0m8SvfwMj
      GGx0NxoOTSZBUyluHlAGbSEAmkohfueXjv/iaUoAXC7QZLLRXWkZ2kIAACDd/wryo0eN7kZD
      oYoMUAoS5WWjVmkbAYAxxN++A5JKNbonDYPJ6cVHEos1uCf1R/joYxiRSNnHtY8AABiBAJLv
      /taxOULkZOhDBbHBPak/RigEpmplH9dWAgAA4e7H0NacWTFG4omT/8Yb3JP6QxIJkET51912
      AmCaitjbb4Np5T8NWh0qpId/RijU4J7UH+MoUFEksO0EAADa1rbjCmYYY2CKCiA9FHLSMJAx
      BhKNgkTLn/u0pQBgGM4LBTKWjgIhvSKMOu8W2UiYLIPpOkgiUfax7SkAAHrguNFdqC+MgZ5E
      wEgsDjhoTYQkU6CSBKOCt37bCsA4dp4ASCL91iPxuKMWBakggGkaSDRW9tCvbQXguMUgxkDF
      dPiT6bqjggCnw12mqmCqWtaxbSsA3X/Q6C7UFWYYZ4Y9TgqFGsFg+g2YSmUeAlZpWwGQRCJ9
      UzgEKqTzgACkb4YKVkVbldMVYCbLoJJU1rFtKwCmaRVFBVoVKghnIj+n8wEnkB3xKzf6174C
      UBRHzQNyb3gqCLaeX9vdhREO23pOu8gsgDEG47i8xbC2FQAozaQG1BpGCKL//X+ANTD2njv2
      tXMIxChF/M470Pf9tp3TLhhjMELPhVluQlz7CgCAcXRU8bFUFC2H1NS1NYh3P4J+cFhxe9WS
      65FUSWakGerSEpQnT2x/q9gBU9UzEa+6DYFyb45TB4RCv2sUlebEkHgcgb/895aGUIwxyA+/
      AdN1CO+/37Brz538UcG6gIvBDAOJX/8mPbFuwjRrmkicCX0aZS6AViSA7e1tPHjwAMFgEPfv
      38fu7i5WVlbw8OFDJJNJPHjwABsbG5Wc2laMcPlPQWYYiPzt38E4OoL01QMLBzDIXz8EAIj3
      7jds3pEb9qSSBNgQBZPnH0NdWQXQnEl2JJE48wYwIpGyhF+RK8TU1BTC4TBUVYWiKHC5XFBV
      FZcuXcL8/Dxu3bpVF1+gUugH/jPtlmyPMaTe+RWUxUUAgHTvPnp+/M+KOiwYO7uZG4NJElIf
      3EXfv/qXJ6erny+QkSMAEo9Bl2VUY03ANA2JX//6TBu532OjfYH0ROKMCQDTVOiCAJfXa+lc
      FQlgcXERMzMz6O3txcTEBB4+fIiuri6IooihoSEIggBKac19gUpBBREexuDu6rLUnvjZ5xD+
      7//L/L+2uQlEIuh86SXzY+bnz3wB0mefYeBP/hievr66+gKxE3e+U6ggwgPAU4VdjPDFl2c2
      J2eiiA6PB64sy5tG+wIpORmgVJTgVhR09PdbOk9FQ6De3l74/X4IgoDV1VVMT0/j5ZdfhiRJ
      uH79OhKJBKanpys5tb3oOojFYZC6uYnoL35x9kNKIX553/QYRgjkb7458xmJxSD94Q/l9rQq
      GKX5qQ+Mlb0olA2VJCTffffMZ0Yo3HSWK7k1AExRyqqIq+gNcOnSpczPIyMjmZ/HxsYAANeu
      XavktLbDdB0kGkHnucmif8+IRhH5678Fk+S838kPHmDwX/wJXFlvkcxxgQD0vf28z1Mf3kXv
      H/0RUOCYmkBpft8ZA4nG0DkxUdEphY8/yYup03i86QRAC9SAk5T1SFBbh0EBlCySYLqO2N//
      g2n2qO73Q8saBmQjPfym4A1hHB7VdxsnSvPNAKpIhyCJBFL/9H7e54wQUDn/IdFIstcAAKQX
      w8qoDGt7AeiHxWPzxnEQcrFN9xiDdO9e/scFhj/Zx6Te/13dcpEYpQVj9JU6ZKR+90Fh8Zy8
      VZqJQje71WEv4AABlFoQUldXSxaPyN88ynvykUgE2uaW6THaxgbU5RXrHa0GQgtuFlJoeFAK
      IxyG8NFHhX/JGIxI86RDUE0DU/LfSKSMxbC2FwAp8TpUVkrfpEYwmLc3sfzNo+LCoTQ9jKjD
      mJkqyvNM0Cwqyd1J/e4D0CKJdDTZPL5LNJ4AM/K/g3LygdpeAPrhkenCCNW0ok/xDIxB+vJe
      5mZmlEIyG/5koa2sgNYhLdksRYFEY2UJ0AgGIX7yafG2mqjWmsSiBQt/yMlORVZoewEwVS0Y
      3QEAEgpbnjApTxZATm40EotZ8h5iqpquz60xNJksWATPFLmsBL3UP71fMt+nGhNi/eAQ0gML
      q+sWISmhoMCZZr0yrP0FYBgwQoW/NHV93XK6AInFoC4tAUiLwVLJIWMw/LXPoDQL+1FBtFwa
      qR8fQ/j096XbisUrzjESP/8cyrOlio4t2BeTtyuVFctvqrYXACg1zQlSV1fLOpX4xZdgjEE6
      yf2xgl5FRqpVcleBTyHJpGUBpN77P6bnyYZKUkXzGirLEP/wBbT1ddsSBs1C10xVLU+E218A
      KPykYIYBdXWtrPOoS8vQtrbLEk49UqSpyY6cTFEsCUA/OoL42eeW2iKxaEWWK/L8Y5BwGEYk
      WnSSXQ6mNzljaat4CzhCAPpBfoG8EQyClJndSAUB8X+8kzaesohxeFjzQhnTL9vlshQKTb77
      W8tvChKrzHJF/PhjAOn5ihG2J6u0WOat1bmKIwRQyC9G29wCq2A3xdN5gFWoJNn2xDPD1AGC
      UhiR4unZ2r4f0j3zfKdcmKaVbT2i7e1BPQ0aMAZtY7Os480olvtvNQTsCAEYx/mOYeWO/zOU
      OX6lkgQjWttQaLEV31L1Ccl33y37QVBuZEv87PMzbxhtd7es4wvBDANUNB/m8ElwFrlPCkYp
      lKXl+jROKYxg7QpJ0qa4hecAQH6tcDbazq61op+zDZa1wEZlGdIXX55td32j6mEhiSeAIjUi
      Vv/NHSEARkh6+9ATjONgXX1z9L3CyXS2QEjR8bvZ8IgxBuHDDyua0JazGCZ/801eKSWJx6te
      HyGRcNFcK7PQdy5FBUAphWEYdd15vCZQesYuXdvZKXscWw213MGSEQIqmk/K87IlT6G0eBJg
      EayGGBljED76OL9pUazau5UkkkWHo0zVTKNj2RQVwL1793D37l188MEH5fewych+4qvLdRr+
      nGDHmNcUQoqu3tJkomDcXdvdrbh+2Wr0TN/ffz75zYYxaFXWjJeyfrRqjFZUAF6vF16vFxMV
      FlU0E6djQsYYlDIjOdVCE0lLT6NKYEbxHH2makCBN7jy+EnFiXpGNGppMUv89PemQ6xqHwql
      rNCZpqULeEpQVACpVArxNjFZPa0LIKFw3X0zqSyXHAZRVUXqgw8hPfgaRjAIZhBLE0VmGEXT
      OYgggOYM9xghaQFUCJPkkhtwUFUturimbVQ3ES5p/stYOleoBKYlkVtbW/j6668xOztb94Ln
      WkDjafcAbWcns51o3TAMkEgUePll07+iHxwi9t9+kX4qu91wdXWha3oKHRMTGPrTfw3PwEDB
      45gkplOhzTJeRTEdJcoqEifJJNTNymPxJJkEMwy4itwX0v2vig7NSDIFEg6jY3y8sj5YcP2z
      MlQzfQNMTU3hrbfewk9/+lP09vae+V00GsXy8jJ0XcfW1hZisRii0Si2trZAKcXGxgaSTZQ2
      CyA9CabU1mSsstrfz68dzkZdWXl+E9N0gYu6vALxk0+hFgnZklSq+NPYMPKGX8qThap2kCGx
      GKCbv3UYpSXTqpksV5UnZWU3GCvBB1MBSJKEd955B++99x72c748t9uNjo4OPHv2DB6PB1tb
      W9je3obb7cbTp0/R3d3dFMZY2ZBoBIwQqMsNEkCJL7tYerURNI+YWFllzg4BM8aqrldmqgqm
      m4demWFAtfD9q+sV3iOMWdr/gFgo3jEdAvX19eGtt97C8vJy3htAURSIooiRkRH4fD7ETuK8
      /f392Nvbw9TUFCKRSMONsc7AAHltvaYhyWJo/gPTcDLTdKjb26bHKts76DE5Vi8V6WAM6nEQ
      nqvp46ksQ6k6CuaCGomgs6+voDGWvrtn6Q2jbm+b/ptQUUTsr/8Ggz/7GTrGx878TrMYvdJD
      wZIh/KK2KNvb2/B6vQjkvG52dnbg8/nQ09ODzc3NjEDW19dx48YNLC0tYXh4uOHGWGegFOr9
      +5mtROsNOTrKM5U6RT8+LjoxZ9GY6bEuK/UMgpD5d5aXV8AqLJZ/3iEKxOLonJkpaIylHh5a
      ijAZW9um15X45FNoS8tI/v0/YOzf/hu4e3qenz8StbQLJgmGSt5fRQXw2muvYWNjA319fWc+
      //73v5/5eXR0FK6TelTGGNxuN15//fXMZ82EOl9Hq5IcmK6DRKLoGHsh73fq5lbRSI5+cJCe
      dBbwGbJifpU9GVUeP7bY4+IUG4LoOzuWzkFFEUbgOM+3yYhEkXo/bcuiLi0h9j//F0Z+9meZ
      STeJWXsDMFUFVVW4u7tN/07RMOijR48QCATgL1LV5Ha74XK54HK54D5R8ulnzQazmCNek7Y1
      rWBSHgBo68XLK6kkmUZUqIXFntMFL6ZpGd/TajHrD6MUusUqOKZpBVPVU++9d2ZuI/7+9xA+
      +PD5cRYL85lhlEy5MBUAIQTT09OIx+M4f/68pQabnka6mpkYNjFKM+7LplBquumfpXDgSfKa
      EQzatnmgWUIcMwxoZWykkeu2ofn9+aWZhCL+y19CXnia/l+rdRyGAVIiE9dUALu7u7h79y7G
      xsawY/GVxilOIYe5dJVU6YW5grkzjIFKpX0wqSiCUQr5yRPbdpAnJgKgyWRZyXL6zvMVYcYY
      kr95t2B2K1M1RP/Tf4Z+fAxq1ZzLQmWYqQAuXbqEa9eupbegcdBui7WkUIquvu+3VItbaFjB
      GLNUycU0DUyWIc/bM/4H0sOyQiu52vZOWSLTtrYyFWba+kZR1wgSiyHyV39jeQ4AlC6MMZ0E
      M8bw5ptvQlEUeC16rXOKo+/spIdhWfMjxaJ7nHGU9jfKnlsxw0jn+pSACCL0owC0LfNQa7lk
      HCdyoiyFxvRFzyPL0A8P0Xn+POL/eKdk+FTbsuDjlEWprFNTAdy/fx/Hx8f47ne/C5/Pd8YF
      mlMZRBBAZRluny/zmWrBmQ5IP8mYrp+NBOm6pY2hmaJAmZ8vq5a5FJmdWXIEoJWbYkEI9P19
      GIHjyqv0ilBqOGY6BLp58yaA9FpAuyTENRzDOPOEJKmUpSV9ID18yq1hYLpubQ+AMq1crMBk
      OW/4xXS97G1KgbTbRuKdX9UkSKHt7UPb3zfNXjUVQG9vL4aGhpBMJrFaA2U6EsbOzAP0vX1L
      T3AAACEgOcUtjBBrhT2M2b/FqcuVl2pAK8zvEb/40nLotFyMw0ME/vwvEfwP/xHCx59k3P1O
      KboO0N3djfHxcT4HsJHs8kh1edn6U48xaDmllcVqgfOPt9mahdK8cKTuP6hoYz4rQYCq0HWo
      K6uI/pf/isC/+wsk3v1txgig6Erw1atXMTw83JSLWq2KtrubmczKjx6VdWxubXG9NgI3wwiH
      kb3Gqq6vN90OMrmQUAiJX/1v9Mx9G10XLxYXwPz8PAzDwKuvvoqXi+Syc6xzuqUSSSahH1kb
      /2eOPRnLnj6QSDLR0Bsu13TLktN2M3DiTdR18WLxIdCVK1fSXpg2Rg+cDonHwRQlXZhTZpkk
      icXPePhUsgGGnWTvG5yeAFdX6F5PtJPF3aICePbsGSRJwnaRVF1OmVAK/eAw7Uta5tPbCIbO
      WL2XKyC7yc5gTSe2lfdGayTa5hYYpcUFMDs7i0QigampqTp1yxkYgaOSCXCFYLoGkngekqb1
      Lu3MgcpKZuHKCIUt+4s2A0Y4BJpMFhfAxsYGxsfH8yrCONWh7exBrcQfk7Ez27KWsxdWLaCS
      mAnDatvbTT8BzoamBBjhsLkANjY2sLS0BE3TIDfZ1pitjvTllxUPX7IzSq3YftQSmkxl6o1r
      FcevGYxBW98wF8DMzAx+8pOfwOPx4MKFC/XsWttD4vGKszKz1wJyF3XqTcYpmrF0ElyLoe3s
      Fg+D7uzsYGpqCsPDw/XqkzOoxg8nFEpnT7pclhLhag1JJODuH6i715IdaFubxecAmqaho6Oj
      LXyB2gUjGkunIut6Qce3unLiFE0TCUsuDc2GEY0VF8DFixextraGo5z8DsMwEIulN504PDxE
      JBJBKpXC0dERKKU4ODjgawc1giaT6VRkXS9qiVgvSCyeHpbVeBecWsAkqXQuEKU0ryY4HA5j
      fX0dgiBgf38fXV1dWF1dRTKZxMrKCiRJworFNF9OmTAG4ziQ9r5sAgFQQShp+tW0MFZcAF1d
      Xejr64OWE9+dmJiA1+tFV1cXBgcHsbi4iI6ODoyNjSEUCuHFF1+E2+3O2Kuf+gLl/iGEFPy8
      0J+qfYHaBcag7u7BkOW6WrybYYTCUMssUmkmTCfB8Xgch4eHcLvduHr16pnf+f1+BAIBvPDC
      C1BVNeO9srq6imvXrmFxcREDAwPN5QvURtBwGG5KmyLuTgJHeea7rYSpALxeLwYGBvD111/n
      +QKdP38+4xQxMTGR5ws0MjKSsUjh2I+2t2e9jqDGGMfBlhz/n2J6l+7s7ODtt9/GwMCA6dMb
      KOwL5PF4eAp1DaGJZLo4pgneANC09J8WxfTOnp2dxc9//vN69oVjERKLQWuWiWcLP/0Bh2yS
      124wTYNxWLm1OOc5XACtCGPQdniKuh1wAbQojS6HbBe4AFoV7tZnC1wAHEfDBcBxNFwAHEfD
      BcBxNFwAHEfDBcBxNFwAHEfDBcBxNFwAHEfDBcBxNFwAHEfDBcBxNFwAHEdTkQAIIRBFEYwx
      xONxKIoCRVEQj8fBGEM0Gs1zkuBwmpGi1ohmBINB7O7u4sqVK/D7/dA0DYwxdHd3o6enB4qi
      QNd1zM3N2d1fDsdWKnoDTE5OwufzQRRFvPTSS+js7ERnZyfOnz+Pg4MDTE1NwePxcF8gTtNT
      0RvA7/fD7/djdHQUq6ur6OrqAmMMy8vLuHLlChYWFtDb28t9gThNT0UCyPUFOrVDoZTC4/Fg
      fHycG+pyWoKKBJBN9o1++nMxHyEOp5ngYVCOo+EC4DgaLgCOo+EC4DgaLgCOo+EC4DgaLgCO
      o+EC4DgaLgCOo+EC4DgaLgCOo+EC4DgaLgCOo+EC4DgaLgCOo+EC4DgaLgCOo+EC4Dga2wTA
      GANjLPMzh9MKVFW8q+s6Hj16hImJCSiKglQqhatXr2J5eRmjo6N45ZVX7Oonh1MTqhKAJElQ
      FAUejweyLGN6ehqPHj3CrVu3sL29DUpp5o+u63nHE0Ist8V9gTi1oCoB+Hw+3L59Gw8fPkR3
      dzckScLAwABEUQSlFC6XK+MUYWaTYtVBgvsCcWpBVQKglGJtbS3jBBeNRnHz5k0sLy/j4sWL
      cLme37TZP2dj9jmHUw+qEkB3dzdu3LiR+f8XX3wRAHD9+vXqesXh1AkeBuU4Gi4AjqPhAuA4
      Gi4AjqPhAuA4Gi4AjqPhAuA4Gi4AjqPhAuA4Gi4AjqPhAuA4Gi4AjqPhAuA4Gi4AjqPhAuA4
      Gi4AjqOxXQCUUiwvLyMWi9l9ag7HdmwXwNHREYaGhrC9vW33qTkc27FdAJqmoaenB243H11x
      mh/b79LJyUmsrKygt7fX7lNzOLZTVVF8IbxeL15//XW7T8vh1AQXq6GP4akpVrHfWx0qUVEE
      U9Wq+1PPodnpP209rV/4NZZHTQVQCsMwLBtjtWJ7lFIwxkxNwWpBI64RQF1FZ+c1NlQAjLG6
      Pjka0R5Q36cjv8byqGuoJts9Ovcist2l69FerTht89QaMrv9YsPBatvLvsbTN0+taKdrrNu7
      MhKJYG1tDXNzc1hcXITb7cbk5CSOjo7Q2dkJURTh8/lw/fp1W25UQRDw8OFDvPHGG3j8+DEI
      IZiensbh4SE0TQNjDAMDA7h8+bJtr++VlRV0dHSgp6cHgUAA4+PjCIVCMAwDExMTCAaDeOml
      lzA5OWlLe8lkEvPz8/jRj36EJ0+egBCCc+fOIRQKoa+vD5FIBMPDw5iZmbHtGpeWltDd3Y2u
      ri4Eg8HMNVJKMTExgUAggAsXLmRcAqslkUhgYWEBt2/fxsLCAiilGB8fRyQSwdjYGPx+f8aJ
      vJJrrNsbYGRkBL29vVBVFaqqIhQKYWxsDN3d3RgaGsL4+DgA2PYE6e3txcjICBhjSCaTiMfj
      6Ovrw+DgIC5cuABRFGEYhq1vhVdeeQWapiEej6Onpwe7u7tIJpOIxWIIBoOYm5tDKBSyrb3+
      /n4MDw+DUopUKoVIJAJd1xEMBqFpWk2ucWZmJnONPp8Pm5ubEEURkiRha2sLt27dsvUaBwYG
      MDg4CEIIBEFAOBxGMBhEf38/9vb2IAgCCCEVX2Pdh0B9fX24du0afD4fGGNQFAWjo6MQRRG6
      rtv6ZTHG4Ha78Z3vfAc9PT3o6OhAMBjE6OgoXnvtNei6DlmWbW2PMYbZ2VkMDg7C6/VicHAQ
      ly5dgiAItraV3WZHRwfm5ubQ09ODWCyGN998E8lkErdv3848cOxsjzGGV199FX19fRgdHcW3
      vvUtdHZ2oqenB5Ik2T7UZIyhq6sLt27dgs/nw7e//W309PTA6/Xihz/8IURRhKZpFZ27bkOg
      cDgMj8eDUCiEWCyGq1evglKKy5cvw+v1wufzYWxszLZXdTKZhMfjweHhIRRFwdTUFNxuN2Zm
      ZuDxeHBwcIChoSH4fD5b2gOAvb09MMYQj8cRi8Vw8+ZNBAIBKIqCH/zgB1hZWcHs7Kxt7SUS
      CXg8HhwdHUGSJFy+fBkjIyNYW1vD7Ows9vf3MTIyAq/Xa1ubu7u7oJQikUggmUxidnYWOzs7
      uHjxIkZHRzNt20U8HofH40EgEIAgCLh8+TIEQUAsFsONGzewubmZGUlUQkOjQBxOo+EJOxxH
      wwXAcTRcABxHU781cw6nTkiShM3NTfh8PoyMjGB4eNj073IBcNqO7u5ufPXVV3C73fjxj3+M
      O3fu4I033sCzZ88wOTmJpaUljI2NIZVK8SEQp/3weDz43ve+hwsXLmBxcRH9/f3Y2dmBpmkw
      DAMjIyO4efMmNE3jbwBOezI5OYm+vj4MDAzg7t27mJ6ehiiKeOGFFzAxMQGXy4WhoSG+DsBx
      NnwIxHE0/x+DmYSl4LHPSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
